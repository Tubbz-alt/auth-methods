{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "auth-methods-mixin.html",
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "Contains a common properties and methods used in the Auth methods element set.\n\nElements that implements this behavior may use `getSettings()` function to return an object\nthat will be passed to the `authorization-enabled` and `authorization-disabled` event.\nBefore sending this event it will try to collect settings data from this function. Whole object\nwill be passed to the event detail.",
          "summary": "",
          "path": "auth-methods-mixin.html",
          "properties": [
            {
              "name": "stepStartIndex",
              "type": "number | null | undefined",
              "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "noSteps",
              "type": "boolean | null | undefined",
              "description": "If true then the auth method will not render progress bar (stepper).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "noink",
              "type": "boolean | null | undefined",
              "description": "Setting passed to paper buttons.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 22
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            }
          ],
          "methods": [
            {
              "name": "_getAuthType",
              "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 74,
                  "column": 4
                },
                "end": {
                  "line": 88,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_notifySettingsChange",
              "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 96,
                  "column": 4
                },
                "end": {
                  "line": 109,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "String",
                  "description": "Auth form type."
                }
              ],
              "return": {
                "type": "CustomEvent",
                "desc": "Dispatched event"
              }
            },
            {
              "name": "_getAmfValue",
              "description": "Extracts value from AMF property.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 116,
                  "column": 4
                },
                "end": {
                  "line": 121,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "model",
                  "type": "Array",
                  "description": "Property model"
                }
              ],
              "return": {
                "type": "(String | undefined)"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 0
            },
            "end": {
              "line": 124,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.AuthMethodsMixin",
          "attributes": [
            {
              "name": "step-start-index",
              "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "no-steps",
              "description": "If true then the auth method will not render progress bar (stepper).",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "noink",
              "description": "Setting passed to paper buttons.",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 22
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "An element that renders authorization steps with title and content.",
      "summary": "",
      "path": "auth-method-step.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 8
            },
            "end": {
              "line": 146,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 154,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title of the step",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 156,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "inactive",
          "type": "boolean | null | undefined",
          "description": "If inactive it shows alternative summary content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_computeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 4
            },
            "end": {
              "line": 168,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "stepStartIndex"
            },
            {
              "name": "currentStep"
            }
          ]
        },
        {
          "name": "_inactiveTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 138,
          "column": 2
        },
        "end": {
          "line": 178,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "UiElements.AuthMethodStep",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 8
            },
            "end": {
              "line": 146,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 8
            },
            "end": {
              "line": 147,
              "column": 20
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 8
            },
            "end": {
              "line": 154,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "title",
          "description": "Title of the step",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 8
            },
            "end": {
              "line": 156,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "inactive",
          "description": "If inactive it shows alternative summary content",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 8
            },
            "end": {
              "line": 162,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-step"
    },
    {
      "description": "The `<auth-method-basic>` element displays a form to provide the Basic\nauth credentials.\nIt calculates base64 has while typing into username or password field.\n\nIt accepts `hash` as a property and once set it will atempt to decode it\nand set username and paswword.\n\n### Example\n\n```html\n<auth-method-basic hash=\"dGVzdDp0ZXN0\"></auth-method-basic>\n```\n\nThis example will produce a form with prefilled username and passowrd with\nvalue \"test\".\n\n## Changes in version 2.0\n\n- Removed `OpendablePanelBehavior`. The element will always react to headers\nchange event\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-basic` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-basic.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "hash",
          "type": "string | null | undefined",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "Extracts value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "reset",
          "description": "Resets state of the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Validation result."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "Dispatches `auth-settings-changed` custom event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "Creates a settings object with user provided data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "User provided data"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 184,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hashChanged",
          "description": "Decodes hash value on change from the external source.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hash",
              "type": "String",
              "description": "Hash value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hashData",
          "description": "Computes hash value for given username or password.\nIt computes value if at least one value for username and password is\nprovided. Otherwise it sets hash to empty string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "uid",
              "type": "String",
              "description": "Username"
            },
            {
              "name": "passwd",
              "type": "String",
              "description": "Password"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Computed hash."
          }
        },
        {
          "name": "_userInputChanged",
          "description": "Sets the hash value for current username and password.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "uid",
              "type": "String",
              "description": "Username"
            },
            {
              "name": "passwd",
              "type": "String",
              "description": "Password"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearUsername",
          "description": "Clears username input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler to the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.\nThis helps to sync changes between elements in the same app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` custom event.\nIf the panel is opened the it checks if current header updates\nauthorization.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyHeaderChange",
          "description": "Dispatches `request-header-changed` custom event to inform other\nelements about authorization value change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/basic.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 86,
          "column": 2
        },
        "end": {
          "line": 354,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodBasic",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "hash",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.\nThe event is not bubbling.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-header-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hash-changed",
          "description": "Fired when the `hash` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-basic",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-digest>` element displays a form for digest authentication.\nThe user have to choose is he want to provide username and password only or\nall digest parameters to calculate final authorization header.\n\nIn first case, the listeners and the transport method must perform handshake\nby it's own. Otherwise authorization header should be set with calculated value.\n\n### Example\n```\n<auth-method-digest username=\"john\" password=\"doe\"></auth-method-digest>\n```\n\nThe `settings` property (of the element or even detail property) for full form\nhas the following structure:\n\n```\n{\n \"username\": String,\n \"realm\": String,\n \"nonce\": String,\n \"uri\": String,\n \"response\": String,\n \"opaque\": String,\n \"qop\": String - can be empty,\n \"nc\": String,\n \"cnonce\": String\n}\n```\n\n## Response calculation\nDepending on the algorithm and quality of protection (qop) properties the hasing\nalgorithm may need following data:\n- request URL\n- request payload (body)\n- request HTTP method\n\nThe element should be provided with this information by setting it's properties.\nHowever, the element will listen for `url-value-changed`, `http-method-changed`\nand `body-value-changed` events on the window object. Once the event is handled\nit will set up corresponding properties.\nAll this events must have a `value` property set on event's detail object.\n\n\n## Changes in version 2.0\n\n- `CryptoJS` library is not included by default. Use\n`advanced-rest-client/cryptojs-lib` component to include the library if\nyour project doesn't use crypto libraries already.\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-digest` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-digest.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 163,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "fullForm",
          "type": "boolean | null | undefined",
          "description": "If set then it will display all form fields.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "realm",
          "type": "string | null | undefined",
          "description": "Server issued realm.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "nonce",
          "type": "string | null | undefined",
          "description": "Server issued nonce.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "algorithm",
          "type": "string | null | undefined",
          "description": "The realm value for the digest response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "qop",
          "type": "string | null | undefined",
          "description": "The quality of protection value for the digest response.\nEither '', 'auth' or 'auth-int'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "nc",
          "type": "number | null | undefined",
          "description": "Nonce count - increments with each request used with the same nonce",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "cnonce",
          "type": "string | null | undefined",
          "description": "Client nonce",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "opaque",
          "type": "string | null | undefined",
          "description": "A string of data specified by the server",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "response",
          "type": "string | null | undefined",
          "description": "Hashed response to server challenge",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "httpMethod",
          "type": "string | null | undefined",
          "description": "Request HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestUrl",
          "type": "string | null | undefined",
          "description": "Current request URL.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestBody",
          "type": "string | null | undefined",
          "description": "Current request body.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "Extracts value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Validation result."
          }
        },
        {
          "name": "getSettings",
          "description": "Returns current settings. Object's structure depends on `fullForm`\nproperty. If it's `false` then the object will contain username and\npassword. Otherwise it will contain a list of parameters of the\nAuthorization header.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearUsername",
          "description": "Clears usernamr field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "generateCnonce",
          "description": "Generates client nonce.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "desc": "Generated client nonce."
          }
        },
        {
          "name": "generateResponse",
          "description": "Generates the response header based on the parameters provided in the\nform.\n\nSee https://en.wikipedia.org/wiki/Digest_access_authentication#Overview",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "A response part of the authenticated digest request."
          }
        },
        {
          "name": "_getHA1",
          "description": "Generates HA1 as defined in Digest spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 4
            },
            "end": {
              "line": 380,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getHA2",
          "description": "Generates HA2 as defined in Digest spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onUrlChanged",
          "description": "Handler to the `url-value-changed` event. When the element handle this\nevent it will update the `requestUrl` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 395,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onHttpMethodChanged",
          "description": "Handler to the `http-method-changed` event. When the element handle this\nevent it will update the `httpMethod` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBodyChanged",
          "description": "Handler to the `body-value-changed` event. When the element handle this\nevent it will update the `requestBody` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 409,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler to the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.\nThis helps to sync changes between elements in the same app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 423,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/digest.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 148,
          "column": 2
        },
        "end": {
          "line": 441,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodDigest",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 163,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "full-form",
          "description": "If set then it will display all form fields.",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "realm",
          "description": "Server issued realm.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "nonce",
          "description": "Server issued nonce.",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "algorithm",
          "description": "The realm value for the digest response.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "qop",
          "description": "The quality of protection value for the digest response.\nEither '', 'auth' or 'auth-int'",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "nc",
          "description": "Nonce count - increments with each request used with the same nonce",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "cnonce",
          "description": "Client nonce",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opaque",
          "description": "A string of data specified by the server",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "response",
          "description": "Hashed response to server challenge",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "http-method",
          "description": "Request HTTP method",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-url",
          "description": "Current request URL.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-body",
          "description": "Current request body.",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-digest",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-ntlm>` element displays a form to provide the NTLM auth\ncredentials.\n\nIt only provides data since NTLM authentication and all calculations must\nbe conducted when working on socket.\n\nThis form requires to provide at least username and password. The domain\nparameter is not required in NTLM so it may be empty.\n\n### Example\n\n```html\n<auth-method-ntlm username=\"john\" password=\"doe\" domain=\"my-nt-domain\"></auth-method-ntlm>\n```\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-ntlm` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-ntlm.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "domain",
          "type": "string | null | undefined",
          "description": "The domain parameter for the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 102,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "Extracts value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "Creates a settings object with user provided data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "User provided data"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearField",
          "description": "Removes a value from the (paper-)input going up through path of the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler for the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/ntlm.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 84,
          "column": 2
        },
        "end": {
          "line": 212,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodNtlm",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "domain",
          "description": "The domain parameter for the request.",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 102,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.\n\nThe `domain` field is not required in the form so check for missing `domain` value if it's\nrequired in your application.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "domain-changed",
          "description": "Fired when the `domain` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-ntlm",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-oauth2>` element displays a form to provide the OAuth 2.0 settings.\n\n### Example\n\n```html\n<auth-method-oauth2></auth-method-oauth2>\n```\n\nThis element uses `oauth2-scope-selector` so the `allowedScopes`, `preventCustomScopes` and\n`scopes` properties will be set on this element. See documentation of `oauth2-scope-selector`\nfor more description.\n\n### Forcing the user to select scope from the list\n\n```html\n<auth-method-oauth2 prevent-custom-scopes></auth-method-oauth2>\n```\n\n```javascript\nvar form = document.querySelector('auth-method-oauth2');\nform.allowedScopes = ['profile', 'email'];\n```\n\n## Authorizing the user\nThe element sends the `oauth2-token-requested` with the OAuth settings provided with the form.\nAny element / app can handle this event and perform authorization.\n*\nWhen the authorization is performed the app / other element should set back `accessToken` property\nof this element or send the `oauth2-token-response` with token response value so the change will\ncan reflected in the UI.\nARC provides the `oauth2-authorization` element that can handle this events.\n\n### Example\n\n```html\n<auth-method-oauth2></auth-method-oauth2>\n<oauth2-authorization></oauth2-authorization>\n```\n\nThe `oauth2-authorization` can be set anywhere in the DOM up from this element siblings to the\nbody. See demo for example usage.\n\n     ## Redirect URL\nMost OAuth 2 providers requires setting the redirect URL with the request. This can't be changed\nby the user and redirect URL can be only set in the provider's settings panel. The element\naccepts the `redirectUri` property which will be displayed to the user that (s)he has to set up\nthis callback URL in the OAuth provider settings. It can be any URL where token / code will be\nhandled properly and the value returned to the `oauth2-authorization` element.\nSee `oauth2-authorization` documentation for more information.\n\nIf you going to use `oauth2-authorization` popup then the redirect URL value must be set to:\n`/bower_components/oauth-authorization/oauth-popup.html`. Mind missing `2` in `oauth-authorization`.\nThis popup is a common popup for auth methods.\n\n### OAuth 2.0 extensibility\n\nAs per [RFC6749, section 8](https://tools.ietf.org/html/rfc6749#section-8) OAuth 2.0\nprotocol can be extended by custom `grant_type`, custom query parameters and custom headers.\n\nThis is not yet supported in RAML. However, working together with RAML spec creators,\nan official RAML annotation to extend OAuth 2.0 settings has been created.\nThe annotation source can be found in the [RAML organization repository](https://github.com/raml-org/raml-annotations/blob/master/annotations/security-schemes/oauth-2-custom-settings.raml).\n\nWhen the annotation is applied to the `ramlSettings` property, this element renders\nadditional form inputs to support custom schemes.\n\nThis produces additional property in the token authorization request: `customData`.\nThe object contains user input from custom properties.\n*\n#### `customData` model\n\n```json\ncustomData: {\n auth: {\n   parameters: Array|undefined\n },\n token: {\n   parameters: Array|undefined,\n   headers: Array|undefined,\n   body: Array|undefined\n }\n}\n```\n`auth` contains properties to be applied to the authorization request.\nOnly query parameetrs are (and can be) supported.\n\n`token` property contains properties to be applied when making token request.\nIt can include `parameters` as a query parameters, `headers` as a list\nof headers to apply, and `body` as a list of properties to send with\nbody.\n\nNote: `body` content type is always `application/x-www-form-urlencoded`.\n`customData.token.body` parameters must not be url encoded. Processors\nhanding token request should handle values encoding.\n\n#### Annotation example\n\n```yaml\n annotationTypes:\n   customSettings: !include oauth-2-custom-settings.raml\n securitySchemes:\n   oauth2:\n     type: OAuth 2.0\n     describedBy:\n       headers:\n         Authorization:\n           example: \"Bearer token\"\n     settings:\n       (customSettings):\n         authorizationSettings:\n           queryParameters:\n             resource:\n               type: string\n               required: true\n               description: |\n                 A resource ID that defines a domain of authorization.\n         accessTokenSettings:\n           body:\n             resource:\n               type: string\n               required: true\n               description: |\n                 A resource ID that defines a domain of authorization.\n       accessTokenUri: https://auth.domain.com/authorize\n       authorizationUri: https://auth.domain.com/token\n       authorizationGrants: [code]\n    scopes: profile\n```\n### Styling\n\n`<auth-method-oauth2>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-oauth2` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n`--auth-grant-dropdown` | Mixin applied to the authorization grants dropdown list | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.\n\n### Theming\nUse this mixins as a theming option across all ARC elements.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--icon-button` | Mixin applied to `paper-icon-buttons`. | `{}`\n`--icon-button-hover` | Mixin applied to `paper-icon-buttons` when hovered. | `{}`\n`--input-line-color` | Mixin applied to the input underline | `{}`\n`--form-label` | Mixin applied to form labels. It will not affect `paper-*` labels | `{}`\n`--auth-button` | Mixin applied to authorization and next buttons` | `{}`\n`--auth-button-hover` | Mixin for :hover state for authorization and next buttons` | `{}`\n`--auth-button-disabled` | Mixin for disabled state for authorization and next buttons` | `{}`\n`--auth-redirect-section` | Mixin applied to the redirect uri section | `{}`\n`--error-toast` | Mixin applied to the error toast message | `{}`\n`--warning-primary-color` | Error toast background color | `#FF7043`\n`--warning-contrast-color` | Error toast color | `#fff`\n\n## Changes in version 2\n\n- Renamed properties\n - `authUrl` -> `authorizationUri`\n - `redirectUrl` -> `redirectUri`\n - `accessTokenUrl` -> `accessTokenUri`\n - `tokenValue` -> `accessToken`\n - `hasTokenValue` -> `hasAccessToken`\n- Added `tokenType` to the events describing type of the token.\nBy default it's `Bearer`\n- **The element does not support RAML js data model anymore**. It uses\n[AMF](https://github.com/mulesoft/amf/) `json/ld` model. Use AMF to read\nAPI spec file (RAML, OAS, etc) and load settings via `amfSettings`\nproperty\n- Added `deliveryMethod` and `deliveryName` properties to the\n`detail.setting` object.",
      "summary": "",
      "path": "auth-method-oauth2.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_queryModelOpts",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 794,
              "column": 6
            },
            "end": {
              "line": 799,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_headersModelOpts",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 6
            },
            "end": {
              "line": 805,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_oauth2GrantTypes",
          "type": "Array.<Object>",
          "description": "List of OAuth 2.0 grants.\nThis list can be extended by custom grants",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 813,
              "column": 6
            },
            "end": {
              "line": 827,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "storeKeys",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 879,
              "column": 6
            },
            "end": {
              "line": 890,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "grantType",
          "type": "string | null | undefined",
          "description": "Seleted authorization grand type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 10
            },
            "end": {
              "line": 532,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "isCustomGrant",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the grant type is a cutom definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 10
            },
            "end": {
              "line": 540,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isSelectedType",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the `grantType` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 10
            },
            "end": {
              "line": 546,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "forceHideTypeSelector",
          "type": "boolean | null | undefined",
          "description": "If true, OAuth flow selector will be collapsed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 10
            },
            "end": {
              "line": 553,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "clientId",
          "type": "string | null | undefined",
          "description": "The client ID for the auth token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 555,
              "column": 10
            },
            "end": {
              "line": 559,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clientIdChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "clientSecret",
          "type": "string | null | undefined",
          "description": "The client secret. It to be used when selected server flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 10
            },
            "end": {
              "line": 565,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clientSecretChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authorizationUri",
          "type": "string | null | undefined",
          "description": "The authorization URL to initialize the OAuth flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 10
            },
            "end": {
              "line": 571,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_authorizationUriChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "accessTokenUri",
          "type": "string | null | undefined",
          "description": "The access token URL to exchange code for token. It is used in server flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 10
            },
            "end": {
              "line": 577,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_accessTokenUriChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password. To be used with the password flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 10
            },
            "end": {
              "line": 583,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_passwordChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The password. To be used with the password flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 10
            },
            "end": {
              "line": 589,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_usernameChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "redirectUri",
          "type": "string | null | undefined",
          "description": "A callback URL to be used with this element.\nUser can't change the callback URL and it will inform the user to setup OAuth to use\nthis value.\n\nThis is relevant when selected flow is the browser flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 10
            },
            "end": {
              "line": 600,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "scopes",
          "type": "Array | null | undefined",
          "description": "List of user selected scopes.\nIt can be pre-populated with list of scopes (array of strings).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 10
            },
            "end": {
              "line": 607,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "allowedScopes",
          "type": "Array | null | undefined",
          "description": "List of pre-defined scopes to choose from. It will be passed to the `oauth2-scope-selector`\nelement.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 612,
              "column": 10
            },
            "end": {
              "line": 612,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "preventCustomScopes",
          "type": "boolean | null | undefined",
          "description": "If true then the `oauth2-scope-selector` will disallow to add a scope that is not\nin the `allowedScopes` list. Has no effect if the `allowedScopes` is not set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 10
            },
            "end": {
              "line": 617,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_authorizing",
          "type": "boolean | null | undefined",
          "description": "True when currently authorizing the user.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 619,
              "column": 10
            },
            "end": {
              "line": 619,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "accessToken",
          "type": "string | null | undefined",
          "description": "When the user authorized the app it should be set to the token value.\nThis element do not perform authorization. Other elements must intercept\n`oauth2-token-requested` and perform the authorization. As a result the element\nperforming an authorization should set back the auth token on the event target object\n(this element).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 10
            },
            "end": {
              "line": 630,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_accessTokenChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenType",
          "type": "string | null | undefined",
          "description": "Received from the response token value.\nBy default it is \"bearer\" as the only one defined in OAuth 2.0\nspec.\nIf the token response contains `tokenType` property this value is\nupdated.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 638,
              "column": 10
            },
            "end": {
              "line": 642,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_tokenTypeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Bearer\""
        },
        {
          "name": "hasAccessToken",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if access token is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 644,
              "column": 10
            },
            "end": {
              "line": 648,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "AMF json/ld mode describing security scheme.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 652,
              "column": 10
            },
            "end": {
              "line": 655,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_amfChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "grantTypes",
          "type": "Array | null | undefined",
          "description": "Currently available grant types.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 658,
              "column": 10
            },
            "end": {
              "line": 661,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_initialized",
          "type": "boolean | null | undefined",
          "description": "`true` whem the element has been initialized.\nWhen changed it dispatches first oauth settings event with initial\nvalues.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 667,
              "column": 10
            },
            "end": {
              "line": 670,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_typeSelectorForceOpened",
          "type": "boolean | null | undefined",
          "description": "If true, the flow type selector will be forced to be opened",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 672,
              "column": 10
            },
            "end": {
              "line": 675,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noAuto",
          "type": "boolean | null | undefined",
          "description": "The element will automatically hide following fileds it the element has been initialized\nwith values for this fields (without user interaction):\n\n- autorization url\n- token url\n- scopes\n\nIf all this values are set then the element will set `isAdvanced` attribute and set\n`advancedOpened` to false\n\nSetting this property will prevent this behavior.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 10
            },
            "end": {
              "line": 689,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isAdvanced",
          "type": "boolean | null | undefined",
          "description": "If set it will render autorization url, token url and scopes as advanced options\nactivated on user interaction.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 694,
              "column": 10
            },
            "end": {
              "line": 694,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "advancedOpened",
          "type": "boolean | null | undefined",
          "description": "If true then the advanced options are opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 698,
              "column": 10
            },
            "end": {
              "line": 698,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noGrantType",
          "type": "boolean | null | undefined",
          "description": "If set, the grant typr selector will be hidden from the UI.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 702,
              "column": 10
            },
            "end": {
              "line": 705,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noGrantTypeChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "authQueryParameters",
          "type": "Array | null | undefined",
          "description": "List of query parameters to apply to authorization request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 714,
              "column": 10
            },
            "end": {
              "line": 717,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenQueryParameters",
          "type": "Array | null | undefined",
          "description": "List of query parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 726,
              "column": 10
            },
            "end": {
              "line": 729,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenHeaders",
          "type": "Array | null | undefined",
          "description": "List of headers to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 738,
              "column": 10
            },
            "end": {
              "line": 741,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenBody",
          "type": "Array | null | undefined",
          "description": "List of body parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 750,
              "column": 10
            },
            "end": {
              "line": 753,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "oauthDeliveryMethod",
          "type": "string | null | undefined",
          "description": "Default delivery method of access token. Reported with\nsettings change event as `deliveryMethod`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default placement of the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 763,
              "column": 10
            },
            "end": {
              "line": 766,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"header\""
        },
        {
          "name": "oauthDeliveryName",
          "type": "string | null | undefined",
          "description": "Default parameter name that carries access token. Reported with\nthe settings change event as `deliveryName`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default parameter name for the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 776,
              "column": 10
            },
            "end": {
              "line": 779,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"authorization\""
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "Extracts value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 836,
              "column": 6
            },
            "end": {
              "line": 846,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 848,
              "column": 6
            },
            "end": {
              "line": 852,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 854,
              "column": 6
            },
            "end": {
              "line": 858,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_autoHide",
          "description": "This function hides all non-crucial fields that has been pre-filled when element has been\ninitialize (values not provided by the user). Hidden fields will be available under\n\"advanced\" options.\n\nTo prevent this behavior set `no-auto` attribute on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 866,
              "column": 6
            },
            "end": {
              "line": 877,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_autoRestore",
          "description": "Automatically restores value from session store if any exists.\nIt does not override values already set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 895,
              "column": 6
            },
            "end": {
              "line": 905,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreSessionProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 907,
              "column": 6
            },
            "end": {
              "line": 914,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "sessionKey"
            },
            {
              "name": "localKey"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_storeSessionProperty",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 916,
              "column": 6
            },
            "end": {
              "line": 924,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "sessionKey"
            },
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 930,
              "column": 6
            },
            "end": {
              "line": 933,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_clientIdChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 935,
              "column": 6
            },
            "end": {
              "line": 938,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clientSecretChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 940,
              "column": 6
            },
            "end": {
              "line": 943,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_authorizationUriChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 945,
              "column": 6
            },
            "end": {
              "line": 948,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_accessTokenUriChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 950,
              "column": 6
            },
            "end": {
              "line": 953,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_passwordChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 955,
              "column": 6
            },
            "end": {
              "line": 958,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_usernameChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 960,
              "column": 6
            },
            "end": {
              "line": 963,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_accessTokenChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 965,
              "column": 6
            },
            "end": {
              "line": 968,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenTypeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 970,
              "column": 6
            },
            "end": {
              "line": 972,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 974,
              "column": 6
            },
            "end": {
              "line": 979,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearField",
          "description": "Removes a value from the (paper-)input going up through path of the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 982,
              "column": 6
            },
            "end": {
              "line": 994,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isFieldDisabled",
          "description": "Checks if the HTML element should be visible in the UI for given properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 996,
              "column": 6
            },
            "end": {
              "line": 1004,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isFieldRequired",
          "description": "Computes the `required` attribute on input fileld.\nWhen using custom grant type all fields are not required.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1012,
              "column": 6
            },
            "end": {
              "line": 1014,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isCustomGrant",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "authorize",
          "description": "Handler for \"authorize\" button click. Sends the `oauth2-token-requested` event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1017,
              "column": 6
            },
            "end": {
              "line": 1039,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorToast",
          "description": "Displays an error message in error toast",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1044,
              "column": 6
            },
            "end": {
              "line": 1048,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message",
              "type": "String",
              "description": "Message to display."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "generateState",
          "description": "Generates `state` parameter for the OAuth2 call.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1055,
              "column": 6
            },
            "end": {
              "line": 1062,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Generated state string."
          }
        },
        {
          "name": "getSettings",
          "description": "Returns current configuration of the OAuth2.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1069,
              "column": 6
            },
            "end": {
              "line": 1128,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Current OAuth2 configuration."
          }
        },
        {
          "name": "_computeAuthCustomData",
          "description": "Adds `customData` property values that can be applied to the\nauthorization request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1136,
              "column": 6
            },
            "end": {
              "line": 1141,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail",
              "type": "Object",
              "description": "Token request detail object. The object is passed\nby reference so no need for return value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeTokenCustomData",
          "description": "Adds `customData` property values that can be applied to the\ntoken request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1149,
              "column": 6
            },
            "end": {
              "line": 1162,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail",
              "type": "Object",
              "description": "Token request detail object. The object is passed\nby reference so no need for return value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCustomParameters",
          "description": "Computes list of parameter values from current model.\n\nThis function ignores empty values if they are not required.\nRequired property are always included, even if the value is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1173,
              "column": 6
            },
            "end": {
              "line": 1207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "Model for form inputs."
            }
          ],
          "return": {
            "type": "(Array | undefined)",
            "desc": "Array of objects with `name` and `value`\nproperties or undefined if `params` is empty or no values are available."
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1213,
              "column": 6
            },
            "end": {
              "line": 1239,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasToken",
          "description": "Computes value for `hasAccessToken` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1246,
              "column": 6
            },
            "end": {
              "line": 1248,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String",
              "description": "Token changed value"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_oauth2ErrorHandler",
          "description": "Handler for `oauth2-error` custom event.\nInforms the user about the error in the flow if the state property\nis the one used with the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1256,
              "column": 6
            },
            "end": {
              "line": 1268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenSuccessHandler",
          "description": "Handler for the token response from the authorization component.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1274,
              "column": 6
            },
            "end": {
              "line": 1301,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_amfChanged",
          "description": "Handler to set up data from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1307,
              "column": 6
            },
            "end": {
              "line": 1332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Security model of AMF"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupOAuthDeliveryMethod",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1334,
              "column": 6
            },
            "end": {
              "line": 1342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOauth2DeliveryMethod",
          "description": "Determines placemenet of OAuth authorization token location.\nIt can be either query parameter or header. This function\nreads API spec to get this information or provides default if\nnot specifies.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1351,
              "column": 6
            },
            "end": {
              "line": 1379,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "info"
            }
          ],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "_preFillAmfData",
          "description": "Reads API security definition and applies itn to the view as predefined\nvalues.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1387,
              "column": 6
            },
            "end": {
              "line": 1415,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF model describing settings of the security\nscheme"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAmfArrayValue",
          "description": "Extracts array value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1421,
              "column": 6
            },
            "end": {
              "line": 1426,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          }
        },
        {
          "name": "_redSecurityScopes",
          "description": "Extracts scopes list from the security definition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1432,
              "column": 6
            },
            "end": {
              "line": 1446,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          }
        },
        {
          "name": "_amfCustomSettingsKey",
          "description": "Finds a key for Custom",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1452,
              "column": 6
            },
            "end": {
              "line": 1466,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Security scheme settings object."
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_applyAnnotationGranst",
          "description": "Applies `authorizationGrants` from OAuth2 settings annotation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1474,
              "column": 6
            },
            "end": {
              "line": 1502,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "gransts",
              "type": "Array",
              "description": "OAuth spec grants available for the endpoint"
            },
            {
              "name": "annotation",
              "type": "?Object",
              "description": "Read annotation."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of granst to apply."
          }
        },
        {
          "name": "_setupAnotationParameters",
          "description": "Sets up annotation supported variables to apply form view for:\n- authorization query parameters\n- authorization headers\n- token query parameters\n- token headers\n- token body",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1513,
              "column": 6
            },
            "end": {
              "line": 1552,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "annotation",
              "type": "Object",
              "description": "Annotation applied to the OAuth settings"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupAuthRequestQueryParameters",
          "description": "Sets up query parameters to be used with authorization request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1558,
              "column": 6
            },
            "end": {
              "line": 1564,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestQueryParameters",
          "description": "Sets up query parameters to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1570,
              "column": 6
            },
            "end": {
              "line": 1576,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestHeaders",
          "description": "Sets up headers to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1582,
              "column": 6
            },
            "end": {
              "line": 1588,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestBody",
          "description": "Sets up body parameters to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1594,
              "column": 6
            },
            "end": {
              "line": 1600,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createViewModel",
          "description": "Creats a form view model for type items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1608,
              "column": 6
            },
            "end": {
              "line": 1614,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of properties to process."
            },
            {
              "name": "modelOptions",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Promise.<(Array | undefined)>",
            "desc": "Form view model or undefined if not set."
          }
        },
        {
          "name": "_computeIsCustomGrant",
          "description": "Computes value of `isCustomGrant` property when `grantType` changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1622,
              "column": 6
            },
            "end": {
              "line": 1625,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Selected grant type."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if the `grantType` is none of the ones defined\nby the OAuth 2.0 spec."
          }
        },
        {
          "name": "_updateGrantTypes",
          "description": "Updates list of OAuth grant types supported by current endpoint.\nThe information should be available in RAML file.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1633,
              "column": 6
            },
            "end": {
              "line": 1647,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "supportedTypes",
              "type": "Array.<String>?",
              "description": "List of supported types. If empty\nor not set then all available types will be displayed."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeGrantList",
          "description": "Computes list of grant types to render in the form.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1655,
              "column": 6
            },
            "end": {
              "line": 1679,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowed"
            }
          ]
        },
        {
          "name": "_computeIsSelectedType",
          "description": "Computes boolean value for `isSelectedType` if `grantType` is set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1686,
              "column": 6
            },
            "end": {
              "line": 1688,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Current grant type."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when the value is set."
          }
        },
        {
          "name": "_clearTypeSelection",
          "description": "Clears grant type selection.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1692,
              "column": 6
            },
            "end": {
              "line": 1694,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeSelectedTypeLabel",
          "description": "Computes the label for selected step title.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1701,
              "column": 6
            },
            "end": {
              "line": 1718,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Selected grant type."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Label to render"
          }
        },
        {
          "name": "_copyContent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1720,
              "column": 6
            },
            "end": {
              "line": 1750,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetCopyButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1752,
              "column": 6
            },
            "end": {
              "line": 1754,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "button"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateStepperState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1756,
              "column": 6
            },
            "end": {
              "line": 1758,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noStepper"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noGrantTypeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1760,
              "column": 6
            },
            "end": {
              "line": 1766,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` custom event.\nIf the panel is opened the it checks if current header updates\nauthorization.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1773,
              "column": 6
            },
            "end": {
              "line": 1802,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleDocumentation",
          "description": "Toggles documentartion for custom property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1808,
              "column": 6
            },
            "end": {
              "line": 1830,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDocsElements",
          "description": "Creates a documentation element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1837,
              "column": 6
            },
            "end": {
              "line": 1853,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            },
            {
              "name": "appendTo",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearDocs",
          "description": "Clears all custom data documention nodes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1857,
              "column": 6
            },
            "end": {
              "line": 1863,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_analyticsEvent",
          "description": "Dispatches analytics event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1872,
              "column": 6
            },
            "end": {
              "line": 1884,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "category",
              "type": "String",
              "description": "Event category"
            },
            {
              "name": "action",
              "type": "String",
              "description": "Event action"
            },
            {
              "name": "label",
              "type": "String",
              "description": "Event label"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oauth2.html",
          "description": ""
        },
        {
          "url": "demo/oauth2-amf.html",
          "description": "Using AMF data model"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 522,
          "column": 4
        },
        "end": {
          "line": 1949,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodOauth2",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "grant-type",
          "description": "Seleted authorization grand type.",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 10
            },
            "end": {
              "line": 532,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-custom-grant",
          "description": "Computed value, true if the grant type is a cutom definition.",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 10
            },
            "end": {
              "line": 540,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-selected-type",
          "description": "Computed value, true if the `grantType` is set.",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 10
            },
            "end": {
              "line": 546,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "force-hide-type-selector",
          "description": "If true, OAuth flow selector will be collapsed.",
          "sourceRange": {
            "start": {
              "line": 550,
              "column": 10
            },
            "end": {
              "line": 553,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "client-id",
          "description": "The client ID for the auth token.",
          "sourceRange": {
            "start": {
              "line": 555,
              "column": 10
            },
            "end": {
              "line": 559,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "client-secret",
          "description": "The client secret. It to be used when selected server flow.",
          "sourceRange": {
            "start": {
              "line": 561,
              "column": 10
            },
            "end": {
              "line": 565,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "authorization-uri",
          "description": "The authorization URL to initialize the OAuth flow.",
          "sourceRange": {
            "start": {
              "line": 567,
              "column": 10
            },
            "end": {
              "line": 571,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "access-token-uri",
          "description": "The access token URL to exchange code for token. It is used in server flow.",
          "sourceRange": {
            "start": {
              "line": 573,
              "column": 10
            },
            "end": {
              "line": 577,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password. To be used with the password flow.",
          "sourceRange": {
            "start": {
              "line": 579,
              "column": 10
            },
            "end": {
              "line": 583,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The password. To be used with the password flow.",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 10
            },
            "end": {
              "line": 589,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "redirect-uri",
          "description": "A callback URL to be used with this element.\nUser can't change the callback URL and it will inform the user to setup OAuth to use\nthis value.\n\nThis is relevant when selected flow is the browser flow.",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 10
            },
            "end": {
              "line": 600,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scopes",
          "description": "List of user selected scopes.\nIt can be pre-populated with list of scopes (array of strings).",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 10
            },
            "end": {
              "line": 607,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "allowed-scopes",
          "description": "List of pre-defined scopes to choose from. It will be passed to the `oauth2-scope-selector`\nelement.",
          "sourceRange": {
            "start": {
              "line": 612,
              "column": 10
            },
            "end": {
              "line": 612,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "prevent-custom-scopes",
          "description": "If true then the `oauth2-scope-selector` will disallow to add a scope that is not\nin the `allowedScopes` list. Has no effect if the `allowedScopes` is not set.",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 10
            },
            "end": {
              "line": 617,
              "column": 38
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "access-token",
          "description": "When the user authorized the app it should be set to the token value.\nThis element do not perform authorization. Other elements must intercept\n`oauth2-token-requested` and perform the authorization. As a result the element\nperforming an authorization should set back the auth token on the event target object\n(this element).",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 10
            },
            "end": {
              "line": 630,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-type",
          "description": "Received from the response token value.\nBy default it is \"bearer\" as the only one defined in OAuth 2.0\nspec.\nIf the token response contains `tokenType` property this value is\nupdated.",
          "sourceRange": {
            "start": {
              "line": 638,
              "column": 10
            },
            "end": {
              "line": 642,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-access-token",
          "description": "Computed value, true if access token is set.",
          "sourceRange": {
            "start": {
              "line": 644,
              "column": 10
            },
            "end": {
              "line": 648,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "amf-settings",
          "description": "AMF json/ld mode describing security scheme.",
          "sourceRange": {
            "start": {
              "line": 652,
              "column": 10
            },
            "end": {
              "line": 655,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "grant-types",
          "description": "Currently available grant types.",
          "sourceRange": {
            "start": {
              "line": 658,
              "column": 10
            },
            "end": {
              "line": 661,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "no-auto",
          "description": "The element will automatically hide following fileds it the element has been initialized\nwith values for this fields (without user interaction):\n\n- autorization url\n- token url\n- scopes\n\nIf all this values are set then the element will set `isAdvanced` attribute and set\n`advancedOpened` to false\n\nSetting this property will prevent this behavior.",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 10
            },
            "end": {
              "line": 689,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-advanced",
          "description": "If set it will render autorization url, token url and scopes as advanced options\nactivated on user interaction.",
          "sourceRange": {
            "start": {
              "line": 694,
              "column": 10
            },
            "end": {
              "line": 694,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "advanced-opened",
          "description": "If true then the advanced options are opened.",
          "sourceRange": {
            "start": {
              "line": 698,
              "column": 10
            },
            "end": {
              "line": 698,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-grant-type",
          "description": "If set, the grant typr selector will be hidden from the UI.",
          "sourceRange": {
            "start": {
              "line": 702,
              "column": 10
            },
            "end": {
              "line": 705,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "auth-query-parameters",
          "description": "List of query parameters to apply to authorization request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 714,
              "column": 10
            },
            "end": {
              "line": 717,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-query-parameters",
          "description": "List of query parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 726,
              "column": 10
            },
            "end": {
              "line": 729,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-headers",
          "description": "List of headers to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 738,
              "column": 10
            },
            "end": {
              "line": 741,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-body",
          "description": "List of body parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 750,
              "column": 10
            },
            "end": {
              "line": 753,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "oauth-delivery-method",
          "description": "Default delivery method of access token. Reported with\nsettings change event as `deliveryMethod`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default placement of the token.",
          "sourceRange": {
            "start": {
              "line": 763,
              "column": 10
            },
            "end": {
              "line": 766,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "oauth-delivery-name",
          "description": "Default parameter name that carries access token. Reported with\nthe settings change event as `deliveryName`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default parameter name for the token.",
          "sourceRange": {
            "start": {
              "line": 776,
              "column": 10
            },
            "end": {
              "line": 779,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.\n\nThis event will set current settings as a detail object which are the same as for the\n`oauth2-token-requested` event. Additionally it will contain a `accessToken` property. This\nvalye can be `undefined` if token hasn't been requested yet by the user.\nClients should support a situaltion when the user do not request the token before requesting\nthe resource and perform authorization.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth2-token-ready",
          "description": "Fired when the request token has been obtained and it's ready to serve.\nBecause only one auth panel can be displayed ad a time it can be assumed\nthat if new token has been obtained then it is current authorization\nmethod.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth2-token-requested",
          "description": "Fired when user requested to perform an authorization.\nThe details object vary depends on the `grantType` property.\nHowever this event always fire two properties set on the `detail` object: `type` and\n`clientId`.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "grant-type-changed",
          "description": "Fired when the `grantType` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "client-id-changed",
          "description": "Fired when the `clientId` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "client-secret-changed",
          "description": "Fired when the `clientSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "authorization-uri-changed",
          "description": "Fired when the `authorizationUri` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "access-token-uri-changed",
          "description": "Fired when the `accessTokenUri` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-oauth2",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-oauth1>` element displays a form to provide the OAuth 1a settings.\n\n### Example\n\n```html\n<auth-method-oauth1 consumer-key=\"xyz\"></auth-method-oauth1>\n```\n\n### Required form fields\n\n- Consumer key\n- Timestamp\n- Nonce\n- Signature method\n\n## Authorizing the user\n\nThis element displays form for user input only. To perform authorization and\nlater to sign the request, add `oauth-authorization/oauth1-authorization.html`\nto the DOM. This element sends `oauth1-token-requested` that is handled by\nautorization element.\n\nNote that the OAuth1 authorization wasn't designed for browser. Most existing\nOAuth1 implementation disallow browsers to perform the authorization by\nnot allowing POST requests to authorization server. Therefore receiving token\nmay not be possible without using browser extensions to alter HTTP request to\nenable CORS.\nIf the server disallow obtaining authorization token and secret from clients\nthen the application should listen for `oauth1-token-requested` custom event\nand perform authorization on the server side.\n\nWhen application is performing authorization instead of `oauth1-authorization`\nelement then the application should dispatch `oauth1-token-response` custom event\nwith `oauth_token` and `oauth_token_secret` properties set on detail object.\nThis element handles the response to reset UI state and to updates other elements\nstatus that works with authorization.\n\n## Signing the request\n\nSee description for `oauth-authorization/oauth1-authorization.html` element.\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-oauth1` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\n### Theming\n\nUse this mixins as a theming option across all ARC elements.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--icon-button` | Mixin applied to `paper-icon-buttons`. | `{}`\n`--icon-button-hover` | Mixin applied to `paper-icon-buttons` when hovered. | `{}`\n`--input-line-color` | Mixin applied to the input underline | `{}`\n`--auth-button` | Mixin applied to authorization and next buttons` | `{}`\n`--auth-button-hover` | Mixin for :hover state for authorization and next buttons` | `{}`\n`--auth-button-disabled` | Mixin for disabled state for authorization and next buttons` | `{}`\n\n## Changes in version 2\n- Crypto library is no linger included into the element.\nUse `advanced-rest-client/cryptojs-lib` component to include the library if your project doesn't use crypto libraries already.",
      "summary": "",
      "path": "auth-method-oauth1.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "defaultSignatureMethods",
          "type": "?",
          "description": "Returns default list of signature methods for OAuth1\n     ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "consumerKey",
          "type": "string | null | undefined",
          "description": "Client ID aka consumer key",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "consumerSecret",
          "type": "string | null | undefined",
          "description": "The client secret aka consumer secret",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "Oauth 1 token (from the oauth console)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 218,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenSecret",
          "type": "string | null | undefined",
          "description": "Oauth 1 token secret (from the oauth console)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "timestamp",
          "type": "number | null | undefined",
          "description": "Timestamp",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 8
            },
            "end": {
              "line": 230,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "nonce",
          "type": "string | null | undefined",
          "description": "The nonce generated for this request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "realm",
          "type": "string | null | undefined",
          "description": "Optional realm",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "signatureMethod",
          "type": "string | null | undefined",
          "description": "Signature method. Enum {`HMAC-SHA256`, `HMAC-SHA1`, `PLAINTEXT`}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 251,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"HMAC-SHA1\""
        },
        {
          "name": "_authorizing",
          "type": "boolean | null | undefined",
          "description": "True when currently authorizing the user.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 8
            },
            "end": {
              "line": 253,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "redirectUrl",
          "type": "string | null | undefined",
          "description": "Authorization callback URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestTokenUrl",
          "type": "string | null | undefined",
          "description": "OAuth1 endpoint to obtain request token to request user authorization.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "accessTokenUrl",
          "type": "string | null | undefined",
          "description": "Endpoint to authorize the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 8
            },
            "end": {
              "line": 274,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authTokenMethod",
          "type": "string | null | undefined",
          "description": "HTTP method to obtain authorization header.\nSpec recommends POST",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"POST\""
        },
        {
          "name": "authParamsLocation",
          "type": "string | null | undefined",
          "description": "A location of the OAuth 1 authorization parameters.\nIt can be either in the URL as a query string (`querystring` value)\nor in the authorization header (`authorization`) value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 293,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"authorization\""
        },
        {
          "name": "authorizationUrl",
          "type": "string | null | undefined",
          "description": "An URL to authentication endpoint where the user should be redirected\nto auththorize the app.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "RAML `securedBy` obejct definition.\nIf set, it will prefill the settings in the auth panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 8
            },
            "end": {
              "line": 309,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_amfSettingsChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "signatureMethods",
          "type": "Array | null | undefined",
          "description": "List of currently support signature methods.\nThis can be updated when `amfSettings` property is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 8
            },
            "end": {
              "line": 314,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 565,
              "column": 4
            },
            "end": {
              "line": 571,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ]
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 347,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 4
            },
            "end": {
              "line": 357,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "Called each time when any of the settings change. It informs application\nthat the user updated the form.\nIt fires `auth-settings-changed` custom event even if the form is invalid\n(missing some info).\n\nThe `valid` property is always if `settings.token` amd\n`settings.tokenSecret` is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 4
            },
            "end": {
              "line": 385,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 405,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearField",
          "description": "Removes a value from the (paper-)input going up through path of the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 442,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "authorize",
          "description": "Handler for \"authorize\" button click. Sends the `oauth2-token-requested` event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 4
            },
            "end": {
              "line": 495,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_oauth1ErrorHandler",
          "description": "Handles OAuth1 authorization errors.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 499,
              "column": 4
            },
            "end": {
              "line": 504,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenResponseHandler",
          "description": "Handler for the `oauth1-token-response` custom event.\nSets `token` and `tokenSecret` properties from the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 4
            },
            "end": {
              "line": 517,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_genTimestamp",
          "description": "Returns current timestamp in seconds",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 519,
              "column": 4
            },
            "end": {
              "line": 522,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_genNonce",
          "description": "Returns autogenerated nocne",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 528,
              "column": 4
            },
            "end": {
              "line": 540,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "?Number",
              "description": "Optional, size of generated string. Default to 32."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated nonce string."
          }
        },
        {
          "name": "_amfSettingsChanged",
          "description": "Called when the AMF object change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 544,
              "column": 4
            },
            "end": {
              "line": 563,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oauth1.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 197,
          "column": 2
        },
        "end": {
          "line": 599,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodOauth1",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "consumer-key",
          "description": "Client ID aka consumer key",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "consumer-secret",
          "description": "The client secret aka consumer secret",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token",
          "description": "Oauth 1 token (from the oauth console)",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 218,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-secret",
          "description": "Oauth 1 token secret (from the oauth console)",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "timestamp",
          "description": "Timestamp",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 8
            },
            "end": {
              "line": 230,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "nonce",
          "description": "The nonce generated for this request",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 8
            },
            "end": {
              "line": 236,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "realm",
          "description": "Optional realm",
          "sourceRange": {
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "signature-method",
          "description": "Signature method. Enum {`HMAC-SHA256`, `HMAC-SHA1`, `PLAINTEXT`}",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 8
            },
            "end": {
              "line": 251,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "redirect-url",
          "description": "Authorization callback URL",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 8
            },
            "end": {
              "line": 260,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-token-url",
          "description": "OAuth1 endpoint to obtain request token to request user authorization.",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 267,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "access-token-url",
          "description": "Endpoint to authorize the token.",
          "sourceRange": {
            "start": {
              "line": 271,
              "column": 8
            },
            "end": {
              "line": 274,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-token-method",
          "description": "HTTP method to obtain authorization header.\nSpec recommends POST",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 8
            },
            "end": {
              "line": 283,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-params-location",
          "description": "A location of the OAuth 1 authorization parameters.\nIt can be either in the URL as a query string (`querystring` value)\nor in the authorization header (`authorization`) value.",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 8
            },
            "end": {
              "line": 293,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "authorization-url",
          "description": "An URL to authentication endpoint where the user should be redirected\nto auththorize the app.",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 8
            },
            "end": {
              "line": 301,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "amf-settings",
          "description": "RAML `securedBy` obejct definition.\nIf set, it will prefill the settings in the auth panel.",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 8
            },
            "end": {
              "line": 309,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "signature-methods",
          "description": "List of currently support signature methods.\nThis can be updated when `amfSettings` property is set.",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 8
            },
            "end": {
              "line": 314,
              "column": 31
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth1-token-requested",
          "description": "Fired when user requested to perform an authorization.\nThe details object vary depends on the `grantType` property.\nHowever this event always fire two properties set on the `detail` object: `type` and\n`clientId`.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "consumer-key-changed",
          "description": "Fired when the `consumerKey` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "consumer-secret-changed",
          "description": "Fired when the `consumerSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "token-changed",
          "description": "Fired when the `token` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "token-secret-changed",
          "description": "Fired when the `tokenSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "timestamp-changed",
          "description": "Fired when the `timestamp` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "nonce-changed",
          "description": "Fired when the `nonce` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "realm-changed",
          "description": "Fired when the `realm` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "signature-method-changed",
          "description": "Fired when the `signatureMethod` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-oauth1",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-custom>` element displays a form to provide the\nauthorization details for RAML's custom security scheme.\n\nThe element, alike other auth methods, dispatches `auth-settings-changed`\ncustom event. However, it also sends `request-header-changed` and\n`query-parameters-changed` custom event to directly manipulate values\nin corresponding UI element. This events are supported with all API components\nthat handles headers or query parameters.\n\nThis element is rendered empty if `amfSettings` property is not set.\nParent element or application should check if model contains the scheme.\n\n### Example\n\n```html\n<auth-method-custom security-scheme=\"{...}\"></auth-method-custom>\n```\n\n### Styling\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-custom` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n`--inline-help-icon-color` | Color of the icon button to display help | `rgba(0, 0, 0, 0.74)`\n`--inline-help-icon-color-hover` | Color of the icon button to display help when hovered | `--accent-color` or `rgba(0, 0, 0, 0.88)`\n`--raml-headers-form-input-label-color` | Color of the lable of the `paper-input` element. | `rgba(0, 0, 0, 0.48)`\n`raml-headers-form-input-label-color-required` | Color of the lable of the `paper-input` element when it's required. | `rgba(0, 0, 0, 0.72)`\n\n## Changes in version 2\n\n- The element now works with AMF json/ld data model. RAML json parser output\nis no longer supported.\n- `ramlSettings` has been renamed to `amfSettings`\n- Added scheme title and documentation to the panel.",
      "summary": "",
      "path": "auth-method-custom.html",
      "properties": [
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "AMF security scheme model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 8
            },
            "end": {
              "line": 185,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemeChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array | null | undefined",
          "description": "Computed list of headers to render in the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "queryParameters",
          "type": "Array | null | undefined",
          "description": "Computed list of query parameters to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 8
            },
            "end": {
              "line": 199,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasHeaders",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if headers are defined in RAML settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 8
            },
            "end": {
              "line": 204,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasQueryParameters",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if query parameters are defined in RAML settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "schemeName",
          "type": "string | null | undefined",
          "description": "Name of the security scheme",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 8
            },
            "end": {
              "line": 216,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "schemeDescription",
          "type": "string | null | undefined",
          "description": "Security scheme description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "documentationOpened",
          "type": "boolean | null | undefined",
          "description": "True to opend scheme descripyion, if available.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 74,
              "column": 4
            },
            "end": {
              "line": 88,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfValue",
          "description": "Extracts value from AMF property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 116,
              "column": 4
            },
            "end": {
              "line": 121,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array",
              "description": "Property model"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 4
            },
            "end": {
              "line": 247,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 4
            },
            "end": {
              "line": 252,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 259,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_schemeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 270,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createViewModel",
          "description": "Generates view model using the tranformer.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Param type. Either `header` or `parameter`."
            },
            {
              "name": "model",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_computeHasData",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 4
            },
            "end": {
              "line": 321,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ]
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ]
        },
        {
          "name": "getSettings",
          "description": "Returns current configuration of the OAuth2.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 352,
              "column": 4
            },
            "end": {
              "line": 355,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Current OAuth2 configuration."
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.\nFor custom methods this is dummy function.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 16
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_debounceNotify",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 362,
              "column": 4
            },
            "end": {
              "line": 371,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifySettingsChanged",
          "description": "Notifies about settings change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerValueChanged",
          "description": "Dispatches headers change event on user input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 392,
              "column": 4
            },
            "end": {
              "line": 394,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_queryValueChanged",
          "description": "Dispatches query parameter change event on user input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 4
            },
            "end": {
              "line": 400,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propertyValueChanged",
          "description": "Dispatches change event for headers and query parameters.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Change type. `header` or `parameter`."
            },
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "Custom event dispatched by the form control."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` event.\nIt updates value for a single header if this header is already on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 423,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parameterChangedHandler",
          "description": "Handler for the `query-parameter-changed` event.\nIt updates value for a single parameter if this parameter is already on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 4
            },
            "end": {
              "line": 432,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateEventValue",
          "description": "Update array value for given type (`headers` or `queryParameters`) for given event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 461,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            },
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleDocumentation",
          "description": "Toggles documentartion for custom property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 4
            },
            "end": {
              "line": 489,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDocsElements",
          "description": "Creates a documentation element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 496,
              "column": 4
            },
            "end": {
              "line": 509,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            },
            {
              "name": "appendTo",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearDocs",
          "description": "Clears all custom data documention nodes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 513,
              "column": 4
            },
            "end": {
              "line": 519,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleSchemeDocumentation",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 521,
              "column": 4
            },
            "end": {
              "line": 523,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/custom.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 175,
          "column": 2
        },
        "end": {
          "line": 550,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodCustom",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amf-settings",
          "description": "AMF security scheme model.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 8
            },
            "end": {
              "line": 185,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "headers",
          "description": "Computed list of headers to render in the form.",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "query-parameters",
          "description": "Computed list of query parameters to render.",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 8
            },
            "end": {
              "line": 199,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-headers",
          "description": "Computed value, true if headers are defined in RAML settings.",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 8
            },
            "end": {
              "line": 204,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-query-parameters",
          "description": "Computed value, true if query parameters are defined in RAML settings.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 8
            },
            "end": {
              "line": 209,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "scheme-name",
          "description": "Name of the security scheme",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 8
            },
            "end": {
              "line": 216,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scheme-description",
          "description": "Security scheme description",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 8
            },
            "end": {
              "line": 223,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "documentation-opened",
          "description": "True to opend scheme descripyion, if available.",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 36
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-parameter-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-header-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-custom",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    }
  ]
}
