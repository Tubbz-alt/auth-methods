{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "ArcBehaviors",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "auth-methods-mixin.html",
        "start": {
          "line": 20,
          "column": 2
        },
        "end": {
          "line": 20,
          "column": 27
        }
      },
      "mixins": [
        {
          "description": "Contains a common properties and methods used in the Auth methods element set.\n\nElements that implements this behavior may use `getSettings()` function to return an object\nthat will be passed to the `authorization-enabled` and `authorization-disabled` event.\nBefore sending this event it will try to collect settings data from this function. Whole object\nwill be passed to the event detail.",
          "summary": "",
          "path": "auth-methods-mixin.html",
          "properties": [
            {
              "name": "stepStartIndex",
              "type": "number | null | undefined",
              "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Number"
                }
              },
              "defaultValue": "1"
            },
            {
              "name": "noSteps",
              "type": "boolean | null | undefined",
              "description": "If true then the auth method will not render progress bar (stepper).",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "noink",
              "type": "boolean | null | undefined",
              "description": "Setting passed to paper buttons.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 22
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              }
            },
            {
              "name": "noDocs",
              "type": "boolean | null | undefined",
              "description": "WHen set it prohibits methods from rendering inline documentation.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 73,
                  "column": 9
                }
              },
              "metadata": {
                "polymer": {
                  "attributeType": "Boolean"
                }
              },
              "defaultValue": "false"
            }
          ],
          "methods": [
            {
              "name": "_getAuthType",
              "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 81,
                  "column": 4
                },
                "end": {
                  "line": 95,
                  "column": 5
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_notifySettingsChange",
              "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 103,
                  "column": 4
                },
                "end": {
                  "line": 116,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "type",
                  "type": "String",
                  "description": "Auth form type."
                }
              ],
              "return": {
                "type": "CustomEvent",
                "desc": "Dispatched event"
              }
            },
            {
              "name": "_computeHasDoc",
              "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 126,
                  "column": 4
                },
                "end": {
                  "line": 131,
                  "column": 5
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "noDocs",
                  "type": "Boolean",
                  "description": "Value of the `noDocs` property"
                },
                {
                  "name": "value",
                  "type": "(Boolean | String)",
                  "description": "Docs value"
                }
              ],
              "return": {
                "type": "Boolean"
              }
            }
          ],
          "staticMethods": [],
          "demos": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 0
            },
            "end": {
              "line": 134,
              "column": 2
            }
          },
          "privacy": "public",
          "name": "ArcBehaviors.AuthMethodsMixin",
          "attributes": [
            {
              "name": "step-start-index",
              "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
              "sourceRange": {
                "start": {
                  "line": 52,
                  "column": 8
                },
                "end": {
                  "line": 55,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "number | null | undefined"
            },
            {
              "name": "no-steps",
              "description": "If true then the auth method will not render progress bar (stepper).",
              "sourceRange": {
                "start": {
                  "line": 59,
                  "column": 8
                },
                "end": {
                  "line": 62,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "noink",
              "description": "Setting passed to paper buttons.",
              "sourceRange": {
                "start": {
                  "line": 66,
                  "column": 8
                },
                "end": {
                  "line": 66,
                  "column": 22
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            },
            {
              "name": "no-docs",
              "description": "WHen set it prohibits methods from rendering inline documentation.",
              "sourceRange": {
                "start": {
                  "line": 70,
                  "column": 8
                },
                "end": {
                  "line": 73,
                  "column": 9
                }
              },
              "metadata": {},
              "type": "boolean | null | undefined"
            }
          ],
          "events": [],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "slots": []
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "An element that renders authorization steps with title and content.",
      "summary": "",
      "path": "auth-method-step.html",
      "properties": [
        {
          "name": "__dataClientsReady",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1098,
              "column": 8
            },
            "end": {
              "line": 1098,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPendingClients",
          "type": "Array",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1100,
              "column": 8
            },
            "end": {
              "line": 1100,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataToNotify",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1102,
              "column": 8
            },
            "end": {
              "line": 1102,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataLinkedPaths",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1104,
              "column": 8
            },
            "end": {
              "line": 1104,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHasPaths",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1106,
              "column": 8
            },
            "end": {
              "line": 1106,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataCompoundStorage",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1108,
              "column": 8
            },
            "end": {
              "line": 1108,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataHost",
          "type": "Polymer_PropertyEffects",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1110,
              "column": 8
            },
            "end": {
              "line": 1110,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataTemp",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1112,
              "column": 8
            },
            "end": {
              "line": 1112,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataClientsInitialized",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1114,
              "column": 8
            },
            "end": {
              "line": 1114,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__data",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1116,
              "column": 8
            },
            "end": {
              "line": 1116,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataPending",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1118,
              "column": 8
            },
            "end": {
              "line": 1118,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__dataOld",
          "type": "!Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1120,
              "column": 8
            },
            "end": {
              "line": 1120,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__computeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1122,
              "column": 8
            },
            "end": {
              "line": 1122,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__reflectEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1124,
              "column": 8
            },
            "end": {
              "line": 1124,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__notifyEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1126,
              "column": 8
            },
            "end": {
              "line": 1126,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__propagateEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1128,
              "column": 8
            },
            "end": {
              "line": 1128,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__observeEffects",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1130,
              "column": 8
            },
            "end": {
              "line": 1130,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__readOnly",
          "type": "Object",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1132,
              "column": 8
            },
            "end": {
              "line": 1132,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__templateInfo",
          "type": "!TemplateInfo",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1134,
              "column": 8
            },
            "end": {
              "line": 1134,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "PROPERTY_EFFECT_TYPES",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1137,
              "column": 6
            },
            "end": {
              "line": 1139,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_template",
          "type": "HTMLTemplateElement",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 486,
              "column": 8
            },
            "end": {
              "line": 486,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_importPath",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 488,
              "column": 8
            },
            "end": {
              "line": 488,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "rootPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 490,
              "column": 8
            },
            "end": {
              "line": 490,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "importPath",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 492,
              "column": 8
            },
            "end": {
              "line": 492,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "root",
          "type": "(StampedTemplate | HTMLElement | ShadowRoot)",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 494,
              "column": 8
            },
            "end": {
              "line": 494,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "$",
          "type": "!Object.<string, !Element>",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 496,
              "column": 8
            },
            "end": {
              "line": 496,
              "column": 15
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "step",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "Title of the step",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "inactive",
          "type": "boolean | null | undefined",
          "description": "If inactive it shows alternative summary content",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 204,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_stampTemplate",
          "description": "Stamps the provided template and performs instance-time setup for\nPolymer template features, including data bindings, declarative event\nlisteners, and the `this.$` map of `id`'s to nodes.  A document fragment\nis returned containing the stamped DOM, ready for insertion into the\nDOM.\n\nThis method may be called more than once; however note that due to\n`shadycss` polyfill limitations, only styles from templates prepared\nusing `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\nto the shadow root and support CSS custom properties), and note that\n`ShadyCSS.prepareTemplate` may only be called once per element. As such,\nany styles required by in runtime-stamped templates must be included\nin the main element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2424,
              "column": 6
            },
            "end": {
              "line": 2449,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to stamp"
            }
          ],
          "return": {
            "type": "!StampedTemplate",
            "desc": "Cloned template content"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addMethodEventListenerToNode",
          "description": "Adds an event listener by method name for the event provided.\n\nThis method generates a handler function that looks up the method\nname at handling time.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 460,
              "column": 6
            },
            "end": {
              "line": 465,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add listener on"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "methodName",
              "type": "string",
              "description": "Name of method"
            },
            {
              "name": "context",
              "type": "*=",
              "description": "Context the method will be called on (defaults\n  to `node`)"
            }
          ],
          "return": {
            "type": "Function",
            "desc": "Generated handler function"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_addEventListenerToNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 475,
              "column": 6
            },
            "end": {
              "line": 477,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to add event listener to"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to add"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_removeEventListenerFromNode",
          "description": "Override point for adding custom or simulated event handling.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 487,
              "column": 6
            },
            "end": {
              "line": 489,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "Node to remove event listener from"
            },
            {
              "name": "eventName",
              "type": "string",
              "description": "Name of event"
            },
            {
              "name": "handler",
              "type": "function (!Event): void",
              "description": "Listener function to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_createPropertyAccessor",
          "description": "Creates a setter/getter pair for the named property with its own\nlocal storage.  The getter returns the value in the local storage,\nand the setter calls `_setProperty`, which updates the local storage\nfor the property and enqueues a `_propertiesChanged` callback.\n\nThis method may be called on a prototype or an instance.  Calling\nthis method may overwrite a property value that already exists on\nthe prototype/instance by creating the accessor.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 106,
              "column": 8
            },
            "end": {
              "line": 115,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created; the\n  protected `_setProperty` function must be used to set the property"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_addPropertyToAttributeMap",
          "description": "Adds the given `property` to a map matching attribute names\nto property names, using `attributeNameForProperty`. This map is\nused when deserializing attribute values to properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 124,
              "column": 8
            },
            "end": {
              "line": 132,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_definePropertyAccessor",
          "description": "Defines a property accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 140,
              "column": 9
            },
            "end": {
              "line": 153,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "readOnly",
              "type": "boolean=",
              "description": "When true, no setter is created"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "ready",
          "description": "Stamps the element template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 603,
              "column": 6
            },
            "end": {
              "line": 609,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeProperties",
          "description": "Overrides the default `Polymer.PropertyAccessors` to ensure class\nmetaprogramming related to property accessors and effects has\ncompleted (calls `finalize`).\n\nIt also initializes any property defaults provided via `value` in\n`properties` metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 511,
              "column": 6
            },
            "end": {
              "line": 543,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_initializeInstanceProperties",
          "description": "Called at ready time with bag of instance properties that overwrote\naccessors when the element upgraded.\n\nThe default implementation sets these properties back into the\nsetter at ready time.  This method is provided as an override\npoint for customizing or providing more efficient initialization.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 222,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of property values that were overwritten\n  when creating property accessors."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_setProperty",
          "description": "Updates the local storage for a property (via `_setPendingProperty`)\nand enqueues a `_proeprtiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 235,
              "column": 8
            },
            "end": {
              "line": 239,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_getProperty",
          "description": "Returns the value for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 249,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of property"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value for the given property"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_setPendingProperty",
          "description": "Updates the local storage for a property, records the previous value,\nand adds it to the set of \"pending changes\" that will be passed to the\n`_propertiesChanged` callback.  This method does not enqueue the\n`_propertiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 264,
              "column": 8
            },
            "end": {
              "line": 280,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of the property"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "ext",
              "type": "boolean=",
              "description": "Not used here; affordance for closure"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property changed"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_invalidateProperties",
          "description": "Marks the properties as invalid, and enqueues an async\n`_propertiesChanged` callback.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 290,
              "column": 8
            },
            "end": {
              "line": 300,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_enableProperties",
          "description": "Call to enable property accessor processing. Before this method is\ncalled accessor values will be set but side effects are\nqueued. When called, any pending side effects occur immediately.\nFor elements, generally `connectedCallback` is a normal spot to do so.\nIt is safe to call this method multiple times as it only turns on\nproperty accessors once.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 313,
              "column": 8
            },
            "end": {
              "line": 322,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_flushProperties",
          "description": "Calls the `_propertiesChanged` callback with the current set of\npending changes (and old values recorded when pending changes were\nset), and resets the pending set of changes. Generally, this method\nshould not be called in user code.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 333,
              "column": 8
            },
            "end": {
              "line": 342,
              "column": 9
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_shouldPropertiesChange",
          "description": "Called in `_flushProperties` to determine if `_propertiesChanged`\nshould be called. The default implementation returns true if\nproperties are pending. Override to customize when\n`_propertiesChanged` is called.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 356,
              "column": 8
            },
            "end": {
              "line": 358,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps",
              "type": "!Object",
              "description": "Bag of all current accessor values"
            },
            {
              "name": "changedProps",
              "type": "!Object",
              "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
            },
            {
              "name": "oldProps",
              "type": "!Object",
              "description": "Bag of previous values for each property\n  in `changedProps`"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "true if changedProps is truthy"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_propertiesChanged",
          "description": "Callback called when any properties with accessors created via\n`_createPropertyAccessor` have been set.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 372,
              "column": 8
            },
            "end": {
              "line": 373,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currentProps",
              "type": "!Object",
              "description": "Bag of all current accessor values"
            },
            {
              "name": "changedProps",
              "type": "!Object",
              "description": "Bag of properties changed since the last\n  call to `_propertiesChanged`"
            },
            {
              "name": "oldProps",
              "type": "!Object",
              "description": "Bag of previous values for each property\n  in `changedProps`"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_shouldPropertyChange",
          "description": "Method called to determine whether a property value should be\nconsidered as a change and cause the `_propertiesChanged` callback\nto be enqueued.\n\nThe default implementation returns `true` if a strict equality\ncheck fails. The method always returns false for `NaN`.\n\nOverride this method to e.g. provide stricter checking for\nObjects/Arrays when using immutable patterns.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 393,
              "column": 8
            },
            "end": {
              "line": 400,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "value",
              "type": "*",
              "description": "New property value"
            },
            {
              "name": "old",
              "type": "*",
              "description": "Previous property value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Whether the property should be considered a change\n  and enqueue a `_proeprtiesChanged` callback"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "attributeChangedCallback",
          "description": "Implements native Custom Elements `attributeChangedCallback` to\nset an attribute value to a property via `_attributeToProperty`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 413,
              "column": 8
            },
            "end": {
              "line": 420,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of attribute that changed"
            },
            {
              "name": "old",
              "type": "?string",
              "description": "Old attribute value"
            },
            {
              "name": "value",
              "type": "?string",
              "description": "New attribute value"
            },
            {
              "name": "namespace",
              "type": "?string",
              "description": "Attribute namespace."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_attributeToProperty",
          "description": "Deserializes an attribute to its associated property.\n\nThis method calls the `_deserializeValue` method to convert the string to\na typed value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 434,
              "column": 8
            },
            "end": {
              "line": 441,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to deserialize."
            },
            {
              "name": "value",
              "type": "?string",
              "description": "of the attribute."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "type to deserialize to, defaults to the value\nreturned from `typeForProperty`"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_propertyToAttribute",
          "description": "Serializes a property to its associated attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 453,
              "column": 8
            },
            "end": {
              "line": 459,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name to reflect."
            },
            {
              "name": "attribute",
              "type": "string=",
              "description": "Attribute name to reflect to."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Property value to refect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_valueToNodeAttribute",
          "description": "Sets a typed value to an HTML attribute on a node.\n\nThis method calls the `_serializeValue` method to convert the typed\nvalue to a string.  If the `_serializeValue` method returns `undefined`,\nthe attribute will be removed (this is the default for boolean\ntype `false`).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 474,
              "column": 8
            },
            "end": {
              "line": 481,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Element to set attribute to."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to serialize."
            },
            {
              "name": "attribute",
              "type": "string",
              "description": "Attribute name to serialize to."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_serializeValue",
          "description": "Converts a typed JavaScript value to a string.\n\nThis method is called when setting JS property values to\nHTML attributes.  Users may override this method to provide\nserialization for custom types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 494,
              "column": 8
            },
            "end": {
              "line": 501,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "*",
              "description": "Property value to serialize."
            }
          ],
          "return": {
            "type": "(string | undefined)",
            "desc": "String serialized from the provided\nproperty  value."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_deserializeValue",
          "description": "Converts a string to a typed JavaScript value.\n\nThis method is called when reading HTML attribute values to\nJS properties.  Users may override this method to provide\ndeserialization for custom `type`s. Types for `Boolean`, `String`,\nand `Number` convert attributes to the expected types.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 515,
              "column": 8
            },
            "end": {
              "line": 524,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "?string",
              "description": "Value to deserialize."
            },
            {
              "name": "type",
              "type": "*=",
              "description": "Type to deserialize the string to."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Typed value deserialized from the provided string."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "_initializeProtoProperties",
          "description": "Overrides `Polymer.PropertyAccessors` implementation to provide a\nmore efficient implementation of initializing properties from\nthe prototype on the instance.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1168,
              "column": 6
            },
            "end": {
              "line": 1172,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Properties to initialize on the prototype"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_ensureAttribute",
          "description": "Ensures the element has the given attribute. If it does not,\nassigns the given value to the attribute.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 193,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attribute",
              "type": "string",
              "description": "Name of attribute to ensure is set."
            },
            {
              "name": "value",
              "type": "string",
              "description": "of the attribute."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_hasAccessor",
          "description": "Returns true if this library created an accessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if an accessor was created"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_isPropertyPending",
          "description": "Returns true if the specified property has a pending change.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 311,
              "column": 6
            },
            "end": {
              "line": 313,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if property has a pending change"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "_addPropertyEffect",
          "description": "Equivalent to static `addPropertyEffect` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1206,
              "column": 6
            },
            "end": {
              "line": 1214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removePropertyEffect",
          "description": "Removes the given property effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1224,
              "column": 6
            },
            "end": {
              "line": 1230,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property the effect was associated with"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object to remove"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasPropertyEffect",
          "description": "Returns whether the current prototype/instance has a property effect\nof a certain type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1241,
              "column": 6
            },
            "end": {
              "line": 1244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "type",
              "type": "string=",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReadOnlyEffect",
          "description": "Returns whether the current prototype/instance has a \"read only\"\naccessor for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1254,
              "column": 6
            },
            "end": {
              "line": 1256,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasNotifyEffect",
          "description": "Returns whether the current prototype/instance has a \"notify\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1266,
              "column": 6
            },
            "end": {
              "line": 1268,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasReflectEffect",
          "description": "Returns whether the current prototype/instance has a \"reflect to attribute\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1278,
              "column": 6
            },
            "end": {
              "line": 1280,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_hasComputedEffect",
          "description": "Returns whether the current prototype/instance has a \"computed\"\nproperty effect for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1290,
              "column": 6
            },
            "end": {
              "line": 1292,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if the prototype/instance has an effect of this type"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setPendingPropertyOrPath",
          "description": "Sets a pending property or path.  If the root property of the path in\nquestion had no accessor, the path is set, otherwise it is enqueued\nvia `_setPendingProperty`.\n\nThis function isolates relatively expensive functionality necessary\nfor the public API (`set`, `setProperties`, `notifyPath`, and property\nchange listeners via {{...}} bindings), such that it is only done\nwhen paths enter the system, and not at every propagation step.  It\nalso sets a `__dataHasPaths` flag on the instance which is used to\nfast-path slower path-matching code in the property effects host paths.\n\n`path` can be a path string or array of path parts as accepted by the\npublic API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1324,
              "column": 6
            },
            "end": {
              "line": 1356,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(number | string)>)",
              "description": "Path to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set"
            },
            {
              "name": "shouldNotify",
              "type": "boolean=",
              "description": "Set to true if this change should\n cause a property notification event dispatch"
            },
            {
              "name": "isPathNotification",
              "type": "boolean=",
              "description": "If the path being set is a path\n  notification of an already changed value, as opposed to a request\n  to set and notify the change.  In the latter `false` case, a dirty\n  check is performed and then the value is set to the path before\n  enqueuing the pending property change."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "Returns true if the property/path was enqueued in\n  the pending changes bag."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_setUnmanagedPropertyToNode",
          "description": "Applies a value to a non-Polymer element/node's property.\n\nThe implementation makes a best-effort at binding interop:\nSome native element properties have side-effects when\nre-setting the same value (e.g. setting `<input>.value` resets the\ncursor position), so we do a dirty-check before setting the value.\nHowever, for better interop with non-Polymer custom elements that\naccept objects, we explicitly re-set object changes coming from the\nPolymer world (which may include deep object changes without the\ntop reference changing), erring on the side of providing more\ninformation.\n\nUsers may override this method to provide alternate approaches.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1379,
              "column": 6
            },
            "end": {
              "line": 1387,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "!Node",
              "description": "The node to set a property on"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "The property to set"
            },
            {
              "name": "value",
              "type": "*",
              "description": "The value to set"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_enqueueClient",
          "description": "Enqueues the given client on a list of pending clients, whose\npending property changes can later be flushed via a call to\n`_flushClients`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1494,
              "column": 6
            },
            "end": {
              "line": 1499,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "client",
              "type": "Object",
              "description": "PropertyEffects client to enqueue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_flushClients",
          "description": "Flushes any clients previously enqueued via `_enqueueClient`, causing\ntheir `_flushProperties` method to run.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1520,
              "column": 6
            },
            "end": {
              "line": 1531,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "__enableOrFlushClients",
          "description": "(c) the stamped dom enables.",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1545,
              "column": 6
            },
            "end": {
              "line": 1558,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_readyClients",
          "description": "Implements `PropertyEffects`'s `_readyClients` call. Attaches\nelement dom by calling `_attachDom` with the dom stamped from the\nelement's template via `_stampTemplate`. Note that this allows\nclient dom to be attached to the element prior to any observers\nrunning.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 621,
              "column": 6
            },
            "end": {
              "line": 630,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "setProperties",
          "description": "Sets a bag of property changes to this instance, and\nsynchronously processes all effects of the properties as a batch.\n\nProperty names must be simple properties, not paths.  Batched\npath propagation is not supported.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1587,
              "column": 6
            },
            "end": {
              "line": 1598,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of one or more key-value pairs whose key is\n  a property and value is the new value to set for that property."
            },
            {
              "name": "setReadOnly",
              "type": "boolean=",
              "description": "When true, any private values set in\n  `props` will be set. By default, `setProperties` will not set\n  `readOnly: true` root properties."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_propagatePropertyChanges",
          "description": "Called to propagate any property changes to stamped template nodes\nmanaged by this element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1685,
              "column": 6
            },
            "end": {
              "line": 1695,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changedProps",
              "type": "Object",
              "description": "Bag of changed properties"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "linkPaths",
          "description": "Aliases one data path as another, such that path notifications from one\nare routed to the other.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1706,
              "column": 6
            },
            "end": {
              "line": 1711,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "to",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Target path to link."
            },
            {
              "name": "from",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Source path to link."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unlinkPaths",
          "description": "Removes a data path alias previously established with `_linkPaths`.\n\nNote, the path to unlink should be the target (`to`) used when\nlinking the paths.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1723,
              "column": 6
            },
            "end": {
              "line": 1728,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Target path to unlink."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifySplices",
          "description": "Notify that an array has changed.\n\nExample:\n\n    this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n    ...\n    this.items.splice(1, 1, {name: 'Sam'});\n    this.items.push({name: 'Bob'});\n    this.notifySplices('items', [\n      { index: 1, removed: [{name: 'Todd'}], addedCount: 1, object: this.items, type: 'splice' },\n      { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n    ]);",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1760,
              "column": 6
            },
            "end": {
              "line": 1764,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "splices",
              "type": "Array",
              "description": "Array of splice records indicating ordered\n  changes that occurred to the array. Each record should have the\n  following fields:\n   * index: index at which the change occurred\n   * removed: array of items that were removed from this index\n   * addedCount: number of new items added at this index\n   * object: a reference to the array in question\n   * type: the string literal 'splice'\n\n  Note that splice records _must_ be normalized such that they are\n  reported in index order (raw results from `Object.observe` are not\n  ordered and must be normalized/merged before notifying)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "get",
          "description": "Convenience method for reading a value from a path.\n\nNote, if any part in the path is undefined, this method returns\n`undefined` (this method does not throw when dereferencing undefined\npaths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1785,
              "column": 6
            },
            "end": {
              "line": 1787,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to the value\n  to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `users.12.name` or `['users', 12, 'name']`)."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value at the path, or `undefined` if any part of the path\n  is undefined."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "set",
          "description": "Convenience method for setting a value to a path and notifying any\nelements bound to the same path.\n\nNote, if any part in the path except for the last is undefined,\nthis method does nothing (this method does not throw when\ndereferencing undefined paths).",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1810,
              "column": 6
            },
            "end": {
              "line": 1820,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to the value\n  to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n  or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n  bracketed expressions are not supported; string-based path parts\n  *must* be separated by dots.  Note that when dereferencing array\n  indices, the index may be used as a dotted part directly\n  (e.g. `'users.12.name'` or `['users', 12, 'name']`)."
            },
            {
              "name": "value",
              "type": "*",
              "description": "Value to set at the specified path."
            },
            {
              "name": "root",
              "type": "Object=",
              "description": "Root object from which the path is evaluated.\n  When specified, no notification will occur."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "push",
          "description": "Adds items onto the end of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1836,
              "column": 6
            },
            "end": {
              "line": 1845,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to push onto array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "pop",
          "description": "Removes an item from the end of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1860,
              "column": 6
            },
            "end": {
              "line": 1869,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "splice",
          "description": "Starting from the start index specified, removes 0 or more items\nfrom the array and inserts 0 or more new items in their place.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.splice`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1888,
              "column": 6
            },
            "end": {
              "line": 1925,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "start",
              "type": "number",
              "description": "Index from which to start removing/inserting."
            },
            {
              "name": "deleteCount",
              "type": "number",
              "description": "Number of items to remove."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert into array."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Array of removed items."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "shift",
          "description": "Removes an item from the beginning of array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.pop`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1940,
              "column": 6
            },
            "end": {
              "line": 1949,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            }
          ],
          "return": {
            "type": "*",
            "desc": "Item that was removed."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "unshift",
          "description": "Adds items onto the beginning of the array at the path specified.\n\nThe arguments after `path` and return value match that of\n`Array.prototype.push`.\n\nThis method notifies other paths to the same array that a\nsplice occurred to the array.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1965,
              "column": 6
            },
            "end": {
              "line": 1973,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "(string | !Array.<(string | number)>)",
              "description": "Path to array."
            },
            {
              "name": "items",
              "type": "...*",
              "rest": true,
              "description": "Items to insert info array"
            }
          ],
          "return": {
            "type": "number",
            "desc": "New length of the array."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "notifyPath",
          "description": "Notify that a path has changed.\n\nExample:\n\n    this.item.user.name = 'Bob';\n    this.notifyPath('item.user.name');",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 1988,
              "column": 6
            },
            "end": {
              "line": 2005,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path",
              "type": "string",
              "description": "Path that should be notified."
            },
            {
              "name": "value",
              "type": "*=",
              "description": "Value at the path (optional)."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReadOnlyProperty",
          "description": "Equivalent to static `createReadOnlyProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2018,
              "column": 6
            },
            "end": {
              "line": 2025,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createPropertyObserver",
          "description": "Equivalent to static `createPropertyObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2039,
              "column": 6
            },
            "end": {
              "line": 2049,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string | function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createMethodObserver",
          "description": "Equivalent to static `createMethodObserver` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2062,
              "column": 6
            },
            "end": {
              "line": 2068,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createNotifyingProperty",
          "description": "Equivalent to static `createNotifyingProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2079,
              "column": 6
            },
            "end": {
              "line": 2087,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createReflectedProperty",
          "description": "Equivalent to static `createReflectedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2098,
              "column": 6
            },
            "end": {
              "line": 2111,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_createComputedProperty",
          "description": "Equivalent to static `createComputedProperty` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2125,
              "column": 6
            },
            "end": {
              "line": 2131,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating\n  whether method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_marshalArgs",
          "description": "Gather the argument values for a method specified in the provided array\nof argument metadata.\n\nThe `path` and `value` arguments are used to fill in wildcard descriptor\nwhen the method is being called as a result of a path notification.",
          "privacy": "private",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2146,
              "column": 6
            },
            "end": {
              "line": 2181,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "args",
              "type": "!Array.<!MethodArg>",
              "description": "Array of argument metadata"
            },
            {
              "name": "path",
              "type": "string",
              "description": "Property/path name that triggered the method effect"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of current property changes"
            }
          ],
          "return": {
            "type": "Array.<*>",
            "desc": "Array of argument values"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_bindTemplate",
          "description": "Equivalent to static `bindTemplate` API but can be called on\nan instance to add effects at runtime.  See that method for\nfull API docs.\n\nThis method may be called on the prototype (for prototypical template\nbinding, to avoid creating accessors every instance) once per prototype,\nand will be called with `runtimeBinding: true` by `_stampTemplate` to\ncreate and link an instance of the template metadata associated with a\nparticular stamping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2358,
              "column": 6
            },
            "end": {
              "line": 2381,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            },
            {
              "name": "instanceBinding",
              "type": "boolean=",
              "description": "When false (default), performs\n  \"prototypical\" binding of the template and overwrites any previously\n  bound template for the class. When true (as passed from\n  `_stampTemplate`), the template info is instanced and linked into\n  the list of bound templates."
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Template metadata object; for `runtimeBinding`,\n  this is an instance of the prototypical template info"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_removeBoundDom",
          "description": "Removes and unbinds the nodes previously contained in the provided\nDocumentFragment returned from `_stampTemplate`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2460,
              "column": 6
            },
            "end": {
              "line": 2481,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "!StampedTemplate",
              "description": "DocumentFragment previously returned\n  from `_stampTemplate` associated with the nodes to be removed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "connectedCallback",
          "description": "Provides a default implementation of the standard Custom Elements\n`connectedCallback`.\n\nThe default implementation enables the property effects system and\nflushes any pending properties, and updates shimmed CSS properties\nwhen using the ShadyCSS scoping/custom properties polyfill.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 590,
              "column": 6
            },
            "end": {
              "line": 595,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "Called when the element is removed from a document",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "_attachDom",
          "description": "Attaches an element's stamped dom to itself. By default,\nthis method creates a `shadowRoot` and adds the dom to it.\nHowever, this method may be overridden to allow an element\nto put its dom in another location.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 644,
              "column": 6
            },
            "end": {
              "line": 660,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "dom",
              "type": "StampedTemplate",
              "description": "to attach to the element."
            }
          ],
          "return": {
            "type": "ShadowRoot",
            "desc": "node to which the dom has been attached."
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "updateStyles",
          "description": "When using the ShadyCSS scoping and custom property shim, causes all\nshimmed styles in this element (and its subtree) to be updated\nbased on current custom property values.\n\nThe optional parameter overrides inline custom property styles with an\nobject of properties where the keys are CSS properties, and the values\nare strings.\n\nExample: `this.updateStyles({'--color': 'blue'})`\n\nThese properties are retained unless a value of `null` is set.\n\nNote: This function does not support updating CSS mixins.\nYou can not dynamically change the value of an `@apply`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 683,
              "column": 6
            },
            "end": {
              "line": 687,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "properties",
              "type": "Object=",
              "description": "Bag of custom property key/values to\n  apply to this element."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "resolveUrl",
          "description": "Rewrites a given URL relative to a base URL. The base URL defaults to\nthe original location of the document containing the `dom-module` for\nthis element. This method will return the same URL before and after\nbundling.\n\nNote that this function performs no resolution for URLs that start\nwith `/` (absolute URLs) or `#` (hash identifiers).  For general purpose\nURL resolution, use `window.URL`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 704,
              "column": 6
            },
            "end": {
              "line": 709,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "url",
              "type": "string",
              "description": "URL to resolve."
            },
            {
              "name": "base",
              "type": "string=",
              "description": "Optional base URL to resolve against, defaults\nto the element's `importPath`"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Rewritten URL relative to base"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_computeStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "stepStartIndex"
            },
            {
              "name": "currentStep"
            }
          ]
        },
        {
          "name": "_inactiveTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 4
            },
            "end": {
              "line": 219,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeContentOpened",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inactive"
            },
            {
              "name": "noSteps"
            }
          ]
        }
      ],
      "staticMethods": [
        {
          "name": "_parseTemplate",
          "description": "Scans a template to produce template metadata.\n\nTemplate-specific metadata are stored in the object returned, and node-\nspecific metadata are stored in objects in its flattened `nodeInfoList`\narray.  Only nodes in the template that were parsed as nodes of\ninterest contain an object in `nodeInfoList`.  Each `nodeInfo` object\ncontains an `index` (`childNodes` index in parent) and optionally\n`parent`, which points to node info of its parent (including its index).\n\nThe template metadata object returned from this method has the following\nstructure (many fields optional):\n\n```js\n  {\n    // Flattened list of node metadata (for nodes that generated metadata)\n    nodeInfoList: [\n      {\n        // `id` attribute for any nodes with id's for generating `$` map\n        id: {string},\n        // `on-event=\"handler\"` metadata\n        events: [\n          {\n            name: {string},   // event name\n            value: {string},  // handler method name\n          }, ...\n        ],\n        // Notes when the template contained a `<slot>` for shady DOM\n        // optimization purposes\n        hasInsertionPoint: {boolean},\n        // For nested `<template>`` nodes, nested template metadata\n        templateInfo: {object}, // nested template metadata\n        // Metadata to allow efficient retrieval of instanced node\n        // corresponding to this metadata\n        parentInfo: {number},   // reference to parent nodeInfo>\n        parentIndex: {number},  // index in parent's `childNodes` collection\n        infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n      },\n      ...\n    ],\n    // When true, the template had the `strip-whitespace` attribute\n    // or was nested in a template with that setting\n    stripWhitespace: {boolean},\n    // For nested templates, nested template content is moved into\n    // a document fragment stored here; this is an optimization to\n    // avoid the cost of nested template cloning\n    content: {DocumentFragment}\n  }\n```\n\nThis method kicks off a recursive treewalk as follows:\n\n```\n   _parseTemplate <---------------------+\n     _parseTemplateContent              |\n       _parseTemplateNode  <------------|--+\n         _parseTemplateNestedTemplate --+  |\n         _parseTemplateChildNodes ---------+\n         _parseTemplateNodeAttributes\n           _parseTemplateNodeAttribute\n\n```\n\nThese methods may be overridden to add custom metadata about templates\nto either `templateInfo` or `nodeInfo`.\n\nNote that this method may be destructive to the template, in that\ne.g. event annotations may be removed after being noted in the\ntemplate metadata.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template to parse"
            },
            {
              "name": "outerTemplateInfo",
              "type": "TemplateInfo=",
              "description": "Template metadata from the outer\n  template, for parsing nested templates"
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Parsed template metadata"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateContent",
          "description": "Overrides `PropertyAccessors` to add map of dynamic functions on\ntemplate info, for consumption by `PropertyEffects` template binding\ncode. This map determines which method templates should have accessors\ncreated for them.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 720,
              "column": 6
            },
            "end": {
              "line": 723,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template"
            },
            {
              "name": "templateInfo"
            },
            {
              "name": "nodeInfo"
            }
          ],
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_parseTemplateNode",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from `TextNode`'s' `textContent`.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2500,
              "column": 6
            },
            "end": {
              "line": 2514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateChildNodes",
          "description": "Parses template child nodes for the given root node.\n\nThis method also wraps whitelisted legacy template extensions\n(`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\nwrappers, collapses text nodes, and strips whitespace from the template\nif the `templateInfo.stripWhitespace` setting was provided.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 263,
              "column": 6
            },
            "end": {
              "line": 303,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "root",
              "type": "Node",
              "description": "Root node whose `childNodes` will be parsed"
            },
            {
              "name": "templateInfo",
              "type": "!TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "!NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNestedTemplate",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nbinding the properties that a nested template depends on to the template\nas `_host_<property>`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2597,
              "column": 6
            },
            "end": {
              "line": 2607,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseTemplateNodeAttributes",
          "description": "Parses template node attributes and adds node metadata to `nodeInfo`\nfor nodes of interest.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 341,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "_parseTemplateNodeAttribute",
          "description": "Overrides default `TemplateStamp` implementation to add support for\nparsing bindings from attributes.  A `bindings`\narray is added to `nodeInfo` and populated with binding metadata\nwith information capturing the binding target, and a `parts` array\nwith one or more metadata objects capturing the source(s) of the\nbinding.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2535,
              "column": 6
            },
            "end": {
              "line": 2581,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Element",
              "description": "Node to parse"
            },
            {
              "name": "templateInfo",
              "type": "TemplateInfo",
              "description": "Template metadata for current template"
            },
            {
              "name": "nodeInfo",
              "type": "NodeInfo",
              "description": "Node metadata for current template node"
            },
            {
              "name": "name",
              "type": "string",
              "description": "Attribute name"
            },
            {
              "name": "value",
              "type": "string",
              "description": "Attribute value"
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "`true` if the visited node added node-specific\n  metadata to `nodeInfo`"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_contentForTemplate",
          "description": "Returns the `content` document fragment for a given template.\n\nFor nested templates, Polymer performs an optimization to cache nested\ntemplate content to avoid the cost of cloning deeply nested templates.\nThis method retrieves the cached content for a given template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/template-stamp.html",
            "start": {
              "line": 396,
              "column": 6
            },
            "end": {
              "line": 399,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "HTMLTemplateElement",
              "description": "Template to retrieve `content` for"
            }
          ],
          "return": {
            "type": "DocumentFragment",
            "desc": "Content fragment"
          },
          "inheritedFrom": "Polymer.TemplateStamp"
        },
        {
          "name": "createProperties",
          "description": "Override of PropertiesChanged createProperties to create accessors\nand property effects for all of the properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 351,
              "column": 6
            },
            "end": {
              "line": 355,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "props"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "attributeNameForProperty",
          "description": "Returns an attribute name that corresponds to the given property.\nThe attribute name is the lowercased property name. Override to\ncustomize this mapping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-changed.html",
            "start": {
              "line": 77,
              "column": 8
            },
            "end": {
              "line": 79,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property to convert"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Attribute name corresponding to the given property."
          },
          "inheritedFrom": "Polymer.PropertiesChanged"
        },
        {
          "name": "typeForProperty",
          "description": "Overrides `PropertiesChanged` method to return type specified in the\nstatic `properties` object for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name",
              "type": "string",
              "description": "Name of property"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Type to which to deserialize attribute"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "createPropertiesForAttributes",
          "description": "Generates property accessors for all attributes in the standard\nstatic `observedAttributes` array.\n\nAttribute names are mapped to property names using the `dash-case` to\n`camelCase` convention",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-accessors.html",
            "start": {
              "line": 129,
              "column": 6
            },
            "end": {
              "line": 134,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyAccessors"
        },
        {
          "name": "addPropertyEffect",
          "description": "Ensures an accessor exists for the specified property, and adds\nto a list of \"property effects\" that will run when the accessor for\nthe specified property is set.  Effects are grouped by \"type\", which\nroughly corresponds to a phase in effect processing.  The effect\nmetadata should be in the following form:\n\n    {\n      fn: effectFunction, // Reference to function to call to perform effect\n      info: { ... }       // Effect metadata passed to function\n      trigger: {          // Optional triggering metadata; if not provided\n        name: string      // the property is treated as a wildcard\n        structured: boolean\n        wildcard: boolean\n      }\n    }\n\nEffects are called from `_propertiesChanged` in the following order by\ntype:\n\n1. COMPUTE\n2. PROPAGATE\n3. REFLECT\n4. OBSERVE\n5. NOTIFY\n\nEffect functions are called with the following signature:\n\n    effectFunction(inst, path, props, oldProps, info, hasPaths)",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2221,
              "column": 6
            },
            "end": {
              "line": 2223,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "type",
              "type": "string",
              "description": "Effect type, from this.PROPERTY_EFFECT_TYPES"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createPropertyObserver",
          "description": "Creates a single-property observer for the given property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2235,
              "column": 6
            },
            "end": {
              "line": 2237,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "method",
              "type": "(string | function (*, *))",
              "description": "Function or name of observer method to call"
            },
            {
              "name": "dynamicFn",
              "type": "boolean=",
              "description": "Whether the method name should be included as\n  a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createMethodObserver",
          "description": "Creates a multi-property \"method observer\" based on the provided\nexpression, which should be a string in the form of a normal JavaScript\nfunction signature: `'methodName(arg1, [..., argn])'`.  Each argument\nshould correspond to a property or path in the context of this\nprototype (or instance), or may be a literal string or number.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2252,
              "column": 6
            },
            "end": {
              "line": 2254,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating"
            }
          ],
          "return": {
            "type": "void",
            "desc": "whether method names should be included as a dependency to the effect."
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createNotifyingProperty",
          "description": "Causes the setter for the given property to dispatch `<property>-changed`\nevents to notify of changes to the property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2264,
              "column": 6
            },
            "end": {
              "line": 2266,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReadOnlyProperty",
          "description": "Creates a read-only accessor for the given property.\n\nTo set the property, use the protected `_setProperty` API.\nTo create a custom protected setter (e.g. `_setMyProp()` for\nproperty `myProp`), pass `true` for `protectedSetter`.\n\nNote, if the property will have other property effects, this method\nshould be called first, before adding other effects.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2284,
              "column": 6
            },
            "end": {
              "line": 2286,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            },
            {
              "name": "protectedSetter",
              "type": "boolean=",
              "description": "Creates a custom protected setter\n  when `true`."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createReflectedProperty",
          "description": "Causes the setter for the given property to reflect the property value\nto a (dash-cased) attribute of the same name.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2296,
              "column": 6
            },
            "end": {
              "line": 2298,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "createComputedProperty",
          "description": "Creates a computed property whose value is set to the result of the\nmethod described by the given `expression` each time one or more\narguments to the method changes.  The expression should be a string\nin the form of a normal JavaScript function signature:\n`'methodName(arg1, [..., argn])'`",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2314,
              "column": 6
            },
            "end": {
              "line": 2316,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "string",
              "description": "Name of computed property to set"
            },
            {
              "name": "expression",
              "type": "string",
              "description": "Method expression"
            },
            {
              "name": "dynamicFn",
              "type": "(boolean | Object)=",
              "description": "Boolean or object map indicating whether\n  method names should be included as a dependency to the effect."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "bindTemplate",
          "description": "Parses the provided template to ensure binding effects are created\nfor them, and then ensures property accessors are created for any\ndependent properties in the template.  Binding effects for bound\ntemplates are stored in a linked list on the instance so that\ntemplates can be efficiently stamped and unstamped.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2330,
              "column": 6
            },
            "end": {
              "line": 2332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "template",
              "type": "!HTMLTemplateElement",
              "description": "Template containing binding\n  bindings"
            }
          ],
          "return": {
            "type": "!TemplateInfo",
            "desc": "Template metadata object"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_addTemplatePropertyEffect",
          "description": "Adds a property effect to the given template metadata, which is run\nat the \"propagate\" stage of `_propertiesChanged` when the template\nhas been bound to the element via `_bindTemplate`.\n\nThe `effect` object should match the format in `_addPropertyEffect`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2396,
              "column": 6
            },
            "end": {
              "line": 2402,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Template metadata to add effect to"
            },
            {
              "name": "prop",
              "type": "string",
              "description": "Property that should trigger the effect"
            },
            {
              "name": "effect",
              "type": "Object=",
              "description": "Effect metadata object"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_parseBindings",
          "description": "Called to parse text in a template (either attribute values or\ntextContent) into binding metadata.\n\nAny overrides of this method should return an array of binding part\nmetadata  representing one or more bindings found in the provided text\nand any \"literal\" text in between.  Any non-literal parts will be passed\nto `_evaluateBinding` when any dependencies change.  The only required\nfields of each \"part\" in the returned array are as follows:\n\n- `dependencies` - Array containing trigger metadata for each property\n  that should trigger the binding to update\n- `literal` - String containing text if the part represents a literal;\n  in this case no `dependencies` are needed\n\nAdditional metadata for use by `_evaluateBinding` may be provided in\neach part object as needed.\n\nThe default implementation handles the following types of bindings\n(one or more may be intermixed with literal strings):\n- Property binding: `[[prop]]`\n- Path binding: `[[object.prop]]`\n- Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n- Two-way property or path bindings (supports negation):\n  `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n- Inline computed method (supports negation):\n  `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n\nThe default implementation uses a regular expression for best\nperformance. However, the regular expression uses a white-list of\nallowed characters in a data-binding, which causes problems for\ndata-bindings that do use characters not in this white-list.\n\nInstead of updating the white-list with all allowed characters,\nthere is a StrictBindingParser (see lib/mixins/strict-binding-parser)\nthat uses a state machine instead. This state machine is able to handle\nall characters. However, it is slightly less performant, therefore we\nextracted it into a separate optional mixin.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2653,
              "column": 6
            },
            "end": {
              "line": 2718,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text",
              "type": "string",
              "description": "Text to parse from attribute or textContent"
            },
            {
              "name": "templateInfo",
              "type": "Object",
              "description": "Current template metadata"
            }
          ],
          "return": {
            "type": "Array.<!BindingPart>",
            "desc": "Array of binding part metadata"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "_evaluateBinding",
          "description": "Called to evaluate a previously parsed binding part based on a set of\none or more changed dependencies.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/property-effects.html",
            "start": {
              "line": 2734,
              "column": 6
            },
            "end": {
              "line": 2751,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "inst",
              "type": "this",
              "description": "Element that should be used as scope for\n  binding dependencies"
            },
            {
              "name": "part",
              "type": "BindingPart",
              "description": "Binding part metadata"
            },
            {
              "name": "path",
              "type": "string",
              "description": "Property/path that triggered this effect"
            },
            {
              "name": "props",
              "type": "Object",
              "description": "Bag of current property changes"
            },
            {
              "name": "oldProps",
              "type": "Object",
              "description": "Bag of previous values for changed properties"
            },
            {
              "name": "hasPaths",
              "type": "boolean",
              "description": "True with `props` contains one or more paths"
            }
          ],
          "return": {
            "type": "*",
            "desc": "Value the binding part evaluated to"
          },
          "inheritedFrom": "Polymer.PropertyEffects"
        },
        {
          "name": "finalize",
          "description": "Finalizes an element definition, including ensuring any super classes\nare also finalized. This includes ensuring property\naccessors exist on the element prototype. This method calls\n`_finalizeClass` to finalize each constructor in the prototype chain.",
          "privacy": "public",
          "sourceRange": {
            "file": "../polymer/lib/mixins/properties-mixin.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PropertiesMixin"
        },
        {
          "name": "_finalizeClass",
          "description": "Override of PropertiesMixin _finalizeClass to create observers and\nfind the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 319,
              "column": 6
            },
            "end": {
              "line": 326,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_prepareTemplate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 328,
              "column": 6
            },
            "end": {
              "line": 342,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "createObservers",
          "description": "Creates observers for the given `observers` array.\nLeverages `PropertyEffects` to create observers.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 368,
              "column": 6
            },
            "end": {
              "line": 373,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "observers",
              "type": "Object",
              "description": "Array of observer descriptors for\n  this class"
            },
            {
              "name": "dynamicFns",
              "type": "Object",
              "description": "Object containing keys for any properties\n  that are functions and should trigger the effect when the function\n  reference is changed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_processStyleText",
          "description": "Gather style text for a style element in the template.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 553,
              "column": 6
            },
            "end": {
              "line": 555,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "cssText",
              "type": "string",
              "description": "Text containing styling to process"
            },
            {
              "name": "baseURI",
              "type": "string",
              "description": "Base URI to rebase CSS paths against"
            }
          ],
          "return": {
            "type": "string",
            "desc": "The processed CSS text"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        },
        {
          "name": "_finalizeTemplate",
          "description": "Configures an element `proto` to function with a given `template`.\nThe element name `is` and extends `ext` must be specified for ShadyCSS\nstyle scoping.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../polymer/lib/mixins/element-mixin.html",
            "start": {
              "line": 566,
              "column": 6
            },
            "end": {
              "line": 577,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "is",
              "type": "string",
              "description": "Tag name (or type extension name) for this element"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.ElementMixin"
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 179,
          "column": 2
        },
        "end": {
          "line": 227,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "UiElements.AuthMethodStep",
      "attributes": [
        {
          "name": "step-start-index",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 8
            },
            "end": {
              "line": 187,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "step",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 20
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 196,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "title",
          "description": "Title of the step",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "inactive",
          "description": "If inactive it shows alternative summary content",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 204,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "title",
          "range": {
            "start": {
              "line": 151,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 38
            }
          }
        },
        {
          "description": "",
          "name": "inactive-title",
          "range": {
            "start": {
              "line": 155,
              "column": 12
            },
            "end": {
              "line": 155,
              "column": 47
            }
          }
        },
        {
          "description": "",
          "name": "",
          "range": {
            "start": {
              "line": 164,
              "column": 12
            },
            "end": {
              "line": 164,
              "column": 25
            }
          }
        }
      ],
      "tagname": "auth-method-step"
    },
    {
      "description": "The `<auth-method-basic>` element displays a form to provide the Basic\nauth credentials.\nIt calculates base64 has while typing into username or password field.\n\nIt accepts `hash` as a property and once set it will atempt to decode it\nand set username and paswword.\n\n### Example\n\n```html\n<auth-method-basic hash=\"dGVzdDp0ZXN0\"></auth-method-basic>\n```\n\nThis example will produce a form with prefilled username and passowrd with\nvalue \"test\".\n\n## Changes in version 2.0\n\n- Removed `OpendablePanelBehavior`. The element will always react to headers\nchange event\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-basic` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-basic.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "hash",
          "type": "string | null | undefined",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 4
            },
            "end": {
              "line": 127,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "reset",
          "description": "Resets state of the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 4
            },
            "end": {
              "line": 140,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Validation result."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "Dispatches `auth-settings-changed` custom event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 159,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "Creates a settings object with user provided data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 171,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "User provided data"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 4
            },
            "end": {
              "line": 184,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_hashChanged",
          "description": "Decodes hash value on change from the external source.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 4
            },
            "end": {
              "line": 214,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hash",
              "type": "String",
              "description": "Hash value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hashData",
          "description": "Computes hash value for given username or password.\nIt computes value if at least one value for username and password is\nprovided. Otherwise it sets hash to empty string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 4
            },
            "end": {
              "line": 239,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "uid",
              "type": "String",
              "description": "Username"
            },
            {
              "name": "passwd",
              "type": "String",
              "description": "Password"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Computed hash."
          }
        },
        {
          "name": "_userInputChanged",
          "description": "Sets the hash value for current username and password.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "uid",
              "type": "String",
              "description": "Username"
            },
            {
              "name": "passwd",
              "type": "String",
              "description": "Password"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearUsername",
          "description": "Clears username input.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler to the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.\nThis helps to sync changes between elements in the same app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 4
            },
            "end": {
              "line": 271,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` custom event.\nIf the panel is opened the it checks if current header updates\nauthorization.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifyHeaderChange",
          "description": "Dispatches `request-header-changed` custom event to inform other\nelements about authorization value change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 315,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "[type]",
              "description": "[description]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[description]"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/basic.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 86,
          "column": 2
        },
        "end": {
          "line": 354,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodBasic",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "hash",
          "description": "base64 hash of the uid and passwd. When set it will override current username and password.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 8
            },
            "end": {
              "line": 96,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 8
            },
            "end": {
              "line": 101,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 8
            },
            "end": {
              "line": 106,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.\nThe event is not bubbling.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-header-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "hash-changed",
          "description": "Fired when the `hash` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-basic",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-digest>` element displays a form for digest authentication.\nThe user have to choose is he want to provide username and password only or\nall digest parameters to calculate final authorization header.\n\nIn first case, the listeners and the transport method must perform handshake\nby it's own. Otherwise authorization header should be set with calculated value.\n\n### Example\n```\n<auth-method-digest username=\"john\" password=\"doe\"></auth-method-digest>\n```\n\nThe `settings` property (of the element or even detail property) for full form\nhas the following structure:\n\n```\n{\n \"username\": String,\n \"realm\": String,\n \"nonce\": String,\n \"uri\": String,\n \"response\": String,\n \"opaque\": String,\n \"qop\": String - can be empty,\n \"nc\": String,\n \"cnonce\": String\n}\n```\n\n## Response calculation\nDepending on the algorithm and quality of protection (qop) properties the hasing\nalgorithm may need following data:\n- request URL\n- request payload (body)\n- request HTTP method\n\nThe element should be provided with this information by setting it's properties.\nHowever, the element will listen for `url-value-changed`, `http-method-changed`\nand `body-value-changed` events on the window object. Once the event is handled\nit will set up corresponding properties.\nAll this events must have a `value` property set on event's detail object.\n\n\n## Changes in version 2.0\n\n- `CryptoJS` library is not included by default. Use\n`advanced-rest-client/cryptojs-lib` component to include the library if\nyour project doesn't use crypto libraries already.\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-digest` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-digest.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 163,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "fullForm",
          "type": "boolean | null | undefined",
          "description": "If set then it will display all form fields.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "realm",
          "type": "string | null | undefined",
          "description": "Server issued realm.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "nonce",
          "type": "string | null | undefined",
          "description": "Server issued nonce.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "algorithm",
          "type": "string | null | undefined",
          "description": "The realm value for the digest response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "qop",
          "type": "string | null | undefined",
          "description": "The quality of protection value for the digest response.\nEither '', 'auth' or 'auth-int'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "nc",
          "type": "number | null | undefined",
          "description": "Nonce count - increments with each request used with the same nonce",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "Number"
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "cnonce",
          "type": "string | null | undefined",
          "description": "Client nonce",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "opaque",
          "type": "string | null | undefined",
          "description": "A string of data specified by the server",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "response",
          "type": "string | null | undefined",
          "description": "Hashed response to server challenge",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "httpMethod",
          "type": "string | null | undefined",
          "description": "Request HTTP method",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestUrl",
          "type": "string | null | undefined",
          "description": "Current request URL.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestBody",
          "type": "string | null | undefined",
          "description": "Current request body.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_processInput\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 244,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 4
            },
            "end": {
              "line": 260,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "Validation result."
          }
        },
        {
          "name": "getSettings",
          "description": "Returns current settings. Object's structure depends on `fullForm`\nproperty. If it's `false` then the object will contain username and\npassword. Otherwise it will contain a list of parameters of the\nAuthorization header.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 288,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_processInput",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 4
            },
            "end": {
              "line": 327,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearUsername",
          "description": "Clears usernamr field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "generateCnonce",
          "description": "Generates client nonce.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "desc": "Generated client nonce."
          }
        },
        {
          "name": "generateResponse",
          "description": "Generates the response header based on the parameters provided in the\nform.\n\nSee https://en.wikipedia.org/wiki/Digest_access_authentication#Overview",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 4
            },
            "end": {
              "line": 369,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "A response part of the authenticated digest request."
          }
        },
        {
          "name": "_getHA1",
          "description": "Generates HA1 as defined in Digest spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 4
            },
            "end": {
              "line": 380,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getHA2",
          "description": "Generates HA2 as defined in Digest spec.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 382,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onUrlChanged",
          "description": "Handler to the `url-value-changed` event. When the element handle this\nevent it will update the `requestUrl` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 393,
              "column": 4
            },
            "end": {
              "line": 395,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onHttpMethodChanged",
          "description": "Handler to the `http-method-changed` event. When the element handle this\nevent it will update the `httpMethod` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 4
            },
            "end": {
              "line": 402,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onBodyChanged",
          "description": "Handler to the `body-value-changed` event. When the element handle this\nevent it will update the `requestBody` property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 409,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler to the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.\nThis helps to sync changes between elements in the same app.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 417,
              "column": 4
            },
            "end": {
              "line": 423,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/digest.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 148,
          "column": 2
        },
        "end": {
          "line": 441,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodDigest",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 8
            },
            "end": {
              "line": 157,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 8
            },
            "end": {
              "line": 163,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "full-form",
          "description": "If set then it will display all form fields.",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 8
            },
            "end": {
              "line": 169,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "realm",
          "description": "Server issued realm.",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 8
            },
            "end": {
              "line": 174,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "nonce",
          "description": "Server issued nonce.",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 8
            },
            "end": {
              "line": 179,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "algorithm",
          "description": "The realm value for the digest response.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 8
            },
            "end": {
              "line": 184,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "qop",
          "description": "The quality of protection value for the digest response.\nEither '', 'auth' or 'auth-int'",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 8
            },
            "end": {
              "line": 192,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "nc",
          "description": "Nonce count - increments with each request used with the same nonce",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 8
            },
            "end": {
              "line": 198,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "cnonce",
          "description": "Client nonce",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 8
            },
            "end": {
              "line": 203,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "opaque",
          "description": "A string of data specified by the server",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "response",
          "description": "Hashed response to server challenge",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "http-method",
          "description": "Request HTTP method",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 8
            },
            "end": {
              "line": 217,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-url",
          "description": "Current request URL.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 8
            },
            "end": {
              "line": 222,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-body",
          "description": "Current request body.",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 8
            },
            "end": {
              "line": 227,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-digest",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-ntlm>` element displays a form to provide the NTLM auth\ncredentials.\n\nIt only provides data since NTLM authentication and all calculations must\nbe conducted when working on socket.\n\nThis form requires to provide at least username and password. The domain\nparameter is not required in NTLM so it may be empty.\n\n### Example\n\n```html\n<auth-method-ntlm username=\"john\" password=\"doe\" domain=\"my-nt-domain\"></auth-method-ntlm>\n```\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-ntlm` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.",
      "summary": "",
      "path": "auth-method-ntlm.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "domain",
          "type": "string | null | undefined",
          "description": "The domain parameter for the request.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The username.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 102,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 4
            },
            "end": {
              "line": 119,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 4
            },
            "end": {
              "line": 132,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 139,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "Creates a settings object with user provided data.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 4
            },
            "end": {
              "line": 151,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "User provided data"
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 4
            },
            "end": {
              "line": 162,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearField",
          "description": "Removes a value from the (paper-)input going up through path of the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAuthSettings",
          "description": "Handler for the `auth-settings-changed` event (fired by all auth panels).\nIf the event was fired by other element with the same method ttype\nthen the form will be updated to incomming values.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 4
            },
            "end": {
              "line": 191,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/ntlm.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 84,
          "column": 2
        },
        "end": {
          "line": 212,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodNtlm",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "domain",
          "description": "The domain parameter for the request.",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 8
            },
            "end": {
              "line": 92,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password.",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 8
            },
            "end": {
              "line": 97,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The username.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 8
            },
            "end": {
              "line": 102,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.\n\nThe `domain` field is not required in the form so check for missing `domain` value if it's\nrequired in your application.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "error",
          "description": "Fired when error occured when decoding hash.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "domain-changed",
          "description": "Fired when the `domain` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-ntlm",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin"
      ]
    },
    {
      "description": "The `<auth-method-oauth2>` element displays a form to provide the OAuth 2.0 settings.\n\n### Example\n\n```html\n<auth-method-oauth2></auth-method-oauth2>\n```\n\nThis element uses `oauth2-scope-selector` so the `allowedScopes`, `preventCustomScopes` and\n`scopes` properties will be set on this element. See documentation of `oauth2-scope-selector`\nfor more description.\n\n### Forcing the user to select scope from the list\n\n```html\n<auth-method-oauth2 prevent-custom-scopes></auth-method-oauth2>\n```\n\n```javascript\nvar form = document.querySelector('auth-method-oauth2');\nform.allowedScopes = ['profile', 'email'];\n```\n\n## Authorizing the user\nThe element sends the `oauth2-token-requested` with the OAuth settings provided with the form.\nAny element / app can handle this event and perform authorization.\n*\nWhen the authorization is performed the app / other element should set back `accessToken` property\nof this element or send the `oauth2-token-response` with token response value so the change will\ncan reflected in the UI.\nARC provides the `oauth2-authorization` element that can handle this events.\n\n### Example\n\n```html\n<auth-method-oauth2></auth-method-oauth2>\n<oauth2-authorization></oauth2-authorization>\n```\n\nThe `oauth2-authorization` can be set anywhere in the DOM up from this element siblings to the\nbody. See demo for example usage.\n\n     ## Redirect URL\nMost OAuth 2 providers requires setting the redirect URL with the request. This can't be changed\nby the user and redirect URL can be only set in the provider's settings panel. The element\naccepts the `redirectUri` property which will be displayed to the user that (s)he has to set up\nthis callback URL in the OAuth provider settings. It can be any URL where token / code will be\nhandled properly and the value returned to the `oauth2-authorization` element.\nSee `oauth2-authorization` documentation for more information.\n\nIf you going to use `oauth2-authorization` popup then the redirect URL value must be set to:\n`/bower_components/oauth-authorization/oauth-popup.html`. Mind missing `2` in `oauth-authorization`.\nThis popup is a common popup for auth methods.\n\n### OAuth 2.0 extensibility\n\nAs per [RFC6749, section 8](https://tools.ietf.org/html/rfc6749#section-8) OAuth 2.0\nprotocol can be extended by custom `grant_type`, custom query parameters and custom headers.\n\nThis is not yet supported in RAML. However, working together with RAML spec creators,\nan official RAML annotation to extend OAuth 2.0 settings has been created.\nThe annotation source can be found in the [RAML organization repository](https://github.com/raml-org/raml-annotations/blob/master/annotations/security-schemes/oauth-2-custom-settings.raml).\n\nWhen the annotation is applied to the `ramlSettings` property, this element renders\nadditional form inputs to support custom schemes.\n\nThis produces additional property in the token authorization request: `customData`.\nThe object contains user input from custom properties.\n*\n#### `customData` model\n\n```json\ncustomData: {\n auth: {\n   parameters: Array|undefined\n },\n token: {\n   parameters: Array|undefined,\n   headers: Array|undefined,\n   body: Array|undefined\n }\n}\n```\n`auth` contains properties to be applied to the authorization request.\nOnly query parameetrs are (and can be) supported.\n\n`token` property contains properties to be applied when making token request.\nIt can include `parameters` as a query parameters, `headers` as a list\nof headers to apply, and `body` as a list of properties to send with\nbody.\n\nNote: `body` content type is always `application/x-www-form-urlencoded`.\n`customData.token.body` parameters must not be url encoded. Processors\nhanding token request should handle values encoding.\n\n#### Annotation example\n\n```yaml\n annotationTypes:\n   customSettings: !include oauth-2-custom-settings.raml\n securitySchemes:\n   oauth2:\n     type: OAuth 2.0\n     describedBy:\n       headers:\n         Authorization:\n           example: \"Bearer token\"\n     settings:\n       (customSettings):\n         authorizationSettings:\n           queryParameters:\n             resource:\n               type: string\n               required: true\n               description: |\n                 A resource ID that defines a domain of authorization.\n         accessTokenSettings:\n           body:\n             resource:\n               type: string\n               required: true\n               description: |\n                 A resource ID that defines a domain of authorization.\n       accessTokenUri: https://auth.domain.com/authorize\n       authorizationUri: https://auth.domain.com/token\n       authorizationGrants: [code]\n    scopes: profile\n```\n\n## clientId and clientSecret\n\nIn RAML there's no way to set an example or demo clientId/secret for the\ntools like API console. This component supports reading data from\nPolymer's `iron-meta` component. Meta components creeated with\n`oauth2-client-id` and `oauth2-client-secret` will be used to prepopulate\nthe form if the form doesn't contain this properties already.\n\nNote, values changed by the user are persistant per browser session\n(until browser is closed). Refresing the page will restore user input\ninstead the one defined in `iron-meta` elements.\n\n### Example\n\n```html\n<iron-meta key=\"oauth2-client-id\" value=\"abcd\"></iron-meta>\n<iron-meta key=\"oauth2-client-secret\" value=\"efgh\"></iron-meta>\n```\n\n## Styling\n\n`<auth-method-oauth2>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-oauth2` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n`--auth-grant-dropdown` | Mixin applied to the authorization grants dropdown list | `{}`\n\nThis is very basic element. Style inputs using `paper-input`'s or `\npaper-toggle`'s css variables.\n\n### Theming\nUse this mixins as a theming option across all ARC elements.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--icon-button` | Mixin applied to `paper-icon-buttons`. | `{}`\n`--icon-button-hover` | Mixin applied to `paper-icon-buttons` when hovered. | `{}`\n`--input-line-color` | Mixin applied to the input underline | `{}`\n`--form-label` | Mixin applied to form labels. It will not affect `paper-*` labels | `{}`\n`--auth-button` | Mixin applied to authorization action buttons | `{}`\n`--auth-button-hover` | Mixin applied to authorization buttons when hovered | `{}`\n`--auth-button-disabled` | Mixin applied to authorization buttons when disabled | `{}`\n`--auth-button-narrow` | Mixin applied to authorization action buttons when narrow layout | `{}`\n`--auth-button-narrow-hover` | Mixin applied to authorization buttons when hovered and narrow layout | `{}`\n`--auth-button-narrow-disabled` | | Mixin applied to authorization buttons when disabled and narrow layout | `{}`\n`--auth-redirect-section` | Mixin applied to the redirect uri section | `{}`\n`--error-toast` | Mixin applied to the error toast message | `{}`\n`--warning-primary-color` | Error toast background color | `#FF7043`\n`--warning-contrast-color` | Error toast color | `#fff`\n\n## Changes in version 2\n\n- Renamed properties\n - `authUrl` -> `authorizationUri`\n - `redirectUrl` -> `redirectUri`\n - `accessTokenUrl` -> `accessTokenUri`\n - `tokenValue` -> `accessToken`\n - `hasTokenValue` -> `hasAccessToken`\n- Added `tokenType` to the events describing type of the token.\nBy default it's `Bearer`\n- **The element does not support RAML js data model anymore**. It uses\n[AMF](https://github.com/mulesoft/amf/) `json/ld` model. Use AMF to read\nAPI spec file (RAML, OAS, etc) and load settings via `amfSettings`\nproperty\n- Added `deliveryMethod` and `deliveryName` properties to the\n`detail.setting` object.",
      "summary": "",
      "path": "auth-method-oauth2.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_queryModelOpts",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 840,
              "column": 6
            },
            "end": {
              "line": 845,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_headersModelOpts",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 847,
              "column": 6
            },
            "end": {
              "line": 851,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_oauth2GrantTypes",
          "type": "Array.<Object>",
          "description": "List of OAuth 2.0 grants.\nThis list can be extended by custom grants",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 859,
              "column": 6
            },
            "end": {
              "line": 873,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "storeKeys",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 925,
              "column": 6
            },
            "end": {
              "line": 936,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "grantType",
          "type": "string | null | undefined",
          "description": "Seleted authorization grand type.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 565,
              "column": 10
            },
            "end": {
              "line": 570,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "isCustomGrant",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the grant type is a cutom definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 574,
              "column": 10
            },
            "end": {
              "line": 578,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "isSelectedType",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if the `grantType` is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 10
            },
            "end": {
              "line": 584,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "forceHideTypeSelector",
          "type": "boolean | null | undefined",
          "description": "If true, OAuth flow selector will be collapsed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 588,
              "column": 10
            },
            "end": {
              "line": 591,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "clientId",
          "type": "string | null | undefined",
          "description": "The client ID for the auth token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 10
            },
            "end": {
              "line": 597,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clientIdChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "clientSecret",
          "type": "string | null | undefined",
          "description": "The client secret. It to be used when selected server flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 599,
              "column": 10
            },
            "end": {
              "line": 603,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_clientSecretChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authorizationUri",
          "type": "string | null | undefined",
          "description": "The authorization URL to initialize the OAuth flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 10
            },
            "end": {
              "line": 609,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_authorizationUriChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "accessTokenUri",
          "type": "string | null | undefined",
          "description": "The access token URL to exchange code for token. It is used in server flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 10
            },
            "end": {
              "line": 615,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_accessTokenUriChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "password",
          "type": "string | null | undefined",
          "description": "The password. To be used with the password flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 10
            },
            "end": {
              "line": 621,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_passwordChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "username",
          "type": "string | null | undefined",
          "description": "The password. To be used with the password flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 10
            },
            "end": {
              "line": 627,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_usernameChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "redirectUri",
          "type": "string | null | undefined",
          "description": "A callback URL to be used with this element.\nUser can't change the callback URL and it will inform the user to setup OAuth to use\nthis value.\n\nThis is relevant when selected flow is the browser flow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 635,
              "column": 10
            },
            "end": {
              "line": 638,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "scopes",
          "type": "Array | null | undefined",
          "description": "List of user selected scopes.\nIt can be pre-populated with list of scopes (array of strings).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 10
            },
            "end": {
              "line": 645,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "allowedScopes",
          "type": "Array | null | undefined",
          "description": "List of pre-defined scopes to choose from. It will be passed to the `oauth2-scope-selector`\nelement.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 10
            },
            "end": {
              "line": 650,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "preventCustomScopes",
          "type": "boolean | null | undefined",
          "description": "If true then the `oauth2-scope-selector` will disallow to add a scope that is not\nin the `allowedScopes` list. Has no effect if the `allowedScopes` is not set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 10
            },
            "end": {
              "line": 655,
              "column": 38
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_authorizing",
          "type": "boolean | null | undefined",
          "description": "True when currently authorizing the user.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 657,
              "column": 10
            },
            "end": {
              "line": 657,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "accessToken",
          "type": "string | null | undefined",
          "description": "When the user authorized the app it should be set to the token value.\nThis element do not perform authorization. Other elements must intercept\n`oauth2-token-requested` and perform the authorization. As a result the element\nperforming an authorization should set back the auth token on the event target object\n(this element).",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 10
            },
            "end": {
              "line": 668,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_accessTokenChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenType",
          "type": "string | null | undefined",
          "description": "Received from the response token value.\nBy default it is \"bearer\" as the only one defined in OAuth 2.0\nspec.\nIf the token response contains `tokenType` property this value is\nupdated.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 676,
              "column": 10
            },
            "end": {
              "line": 680,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_tokenTypeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Bearer\""
        },
        {
          "name": "hasAccessToken",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if access token is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 682,
              "column": 10
            },
            "end": {
              "line": 686,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "AMF json/ld mode describing security scheme.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 690,
              "column": 10
            },
            "end": {
              "line": 693,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_amfChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "grantTypes",
          "type": "Array | null | undefined",
          "description": "Currently available grant types.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 696,
              "column": 10
            },
            "end": {
              "line": 699,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "_initialized",
          "type": "boolean | null | undefined",
          "description": "`true` whem the element has been initialized.\nWhen changed it dispatches first oauth settings event with initial\nvalues.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 705,
              "column": 10
            },
            "end": {
              "line": 708,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "_typeSelectorForceOpened",
          "type": "boolean | null | undefined",
          "description": "If true, the flow type selector will be forced to be opened",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 10
            },
            "end": {
              "line": 713,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "noAuto",
          "type": "boolean | null | undefined",
          "description": "The element will automatically hide following fileds it the element has been initialized\nwith values for this fields (without user interaction):\n\n- autorization url\n- token url\n- scopes\n\nIf all this values are set then the element will set `isAdvanced` attribute and set\n`advancedOpened` to false\n\nSetting this property will prevent this behavior.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 727,
              "column": 10
            },
            "end": {
              "line": 727,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "isAdvanced",
          "type": "boolean | null | undefined",
          "description": "If set it will render autorization url, token url and scopes as advanced options\nactivated on user interaction.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 732,
              "column": 10
            },
            "end": {
              "line": 732,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "advancedOpened",
          "type": "boolean | null | undefined",
          "description": "If true then the advanced options are opened.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 736,
              "column": 10
            },
            "end": {
              "line": 736,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noGrantType",
          "type": "boolean | null | undefined",
          "description": "If set, the grant typr selector will be hidden from the UI.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 740,
              "column": 10
            },
            "end": {
              "line": 743,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noGrantTypeChanged\"",
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "authQueryParameters",
          "type": "Array | null | undefined",
          "description": "List of query parameters to apply to authorization request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 752,
              "column": 10
            },
            "end": {
              "line": 755,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenQueryParameters",
          "type": "Array | null | undefined",
          "description": "List of query parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 10
            },
            "end": {
              "line": 767,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenHeaders",
          "type": "Array | null | undefined",
          "description": "List of headers to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 776,
              "column": 10
            },
            "end": {
              "line": 779,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "tokenBody",
          "type": "Array | null | undefined",
          "description": "List of body parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 788,
              "column": 10
            },
            "end": {
              "line": 791,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "oauthDeliveryMethod",
          "type": "string | null | undefined",
          "description": "Default delivery method of access token. Reported with\nsettings change event as `deliveryMethod`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default placement of the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 10
            },
            "end": {
              "line": 804,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"header\""
        },
        {
          "name": "oauthDeliveryName",
          "type": "string | null | undefined",
          "description": "Default parameter name that carries access token. Reported with\nthe settings change event as `deliveryName`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default parameter name for the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 814,
              "column": 10
            },
            "end": {
              "line": 817,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"authorization\""
        },
        {
          "name": "narrow",
          "type": "boolean | null | undefined",
          "description": "Renders slightly different view that is optymized for mobile\nor narrow area on desktop.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 822,
              "column": 10
            },
            "end": {
              "line": 825,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 894,
              "column": 6
            },
            "end": {
              "line": 898,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 900,
              "column": 6
            },
            "end": {
              "line": 904,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 291,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "Computes API version from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel",
              "type": "(Object | Array.<Object>)"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 465,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 485,
              "column": 4
            },
            "end": {
              "line": 493,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 500,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 551,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 565,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 577,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 598,
              "column": 4
            },
            "end": {
              "line": 604,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 627,
              "column": 4
            },
            "end": {
              "line": 648,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 660,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 668,
              "column": 4
            },
            "end": {
              "line": 671,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 679,
              "column": 4
            },
            "end": {
              "line": 690,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 698,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 718,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 725,
              "column": 4
            },
            "end": {
              "line": 746,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 755,
              "column": 4
            },
            "end": {
              "line": 762,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 771,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 795,
              "column": 4
            },
            "end": {
              "line": 810,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 831,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 845,
              "column": 4
            },
            "end": {
              "line": 894,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 918,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 937,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 950,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 959,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 979,
              "column": 4
            },
            "end": {
              "line": 1000,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1006,
              "column": 4
            },
            "end": {
              "line": 1032,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 882,
              "column": 6
            },
            "end": {
              "line": 892,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_autoHide",
          "description": "This function hides all non-crucial fields that has been pre-filled when element has been\ninitialize (values not provided by the user). Hidden fields will be available under\n\"advanced\" options.\n\nTo prevent this behavior set `no-auto` attribute on this element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 912,
              "column": 6
            },
            "end": {
              "line": 923,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_autoRestore",
          "description": "Automatically restores value from session store if any exists.\nIt does not override values already set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 941,
              "column": 6
            },
            "end": {
              "line": 957,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreSessionProperty",
          "description": "Restores an item from a session store and assigns it to a local\nproperty.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 964,
              "column": 6
            },
            "end": {
              "line": 971,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "sessionKey",
              "type": "String",
              "description": "Session storage key"
            },
            {
              "name": "localKey",
              "type": "String",
              "description": "This component's property"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_storeSessionProperty",
          "description": "Stores a property in a session storage.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 977,
              "column": 6
            },
            "end": {
              "line": 985,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "sessionKey",
              "type": "String",
              "description": "A storage key"
            },
            {
              "name": "value",
              "type": "String",
              "description": "Value to store"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreMetaClientId",
          "description": "Sets `clientId` property from `iron-meta` if created.\nThe key for the meta is `oauth2-client-id`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 990,
              "column": 6
            },
            "end": {
              "line": 996,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_restoreMetaClientSecret",
          "description": "Sets `clientSecret` property from `iron-meta` if created.\nThe key for the meta is `oauth2-client-secret`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1001,
              "column": 6
            },
            "end": {
              "line": 1007,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1013,
              "column": 6
            },
            "end": {
              "line": 1016,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_clientIdChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1018,
              "column": 6
            },
            "end": {
              "line": 1021,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clientSecretChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1023,
              "column": 6
            },
            "end": {
              "line": 1026,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_authorizationUriChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1028,
              "column": 6
            },
            "end": {
              "line": 1031,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_accessTokenUriChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1033,
              "column": 6
            },
            "end": {
              "line": 1036,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_passwordChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1038,
              "column": 6
            },
            "end": {
              "line": 1041,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_usernameChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1043,
              "column": 6
            },
            "end": {
              "line": 1046,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_accessTokenChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1048,
              "column": 6
            },
            "end": {
              "line": 1051,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenTypeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1053,
              "column": 6
            },
            "end": {
              "line": 1055,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1057,
              "column": 6
            },
            "end": {
              "line": 1062,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isFieldDisabled",
          "description": "Checks if the HTML element should be visible in the UI for given properties.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1065,
              "column": 6
            },
            "end": {
              "line": 1073,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isFieldRequired",
          "description": "Computes the `required` attribute on input fileld.\nWhen using custom grant type all fields are not required.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1081,
              "column": 6
            },
            "end": {
              "line": 1083,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "isCustomGrant",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "authorize",
          "description": "Dispatches the `oauth2-token-requested` event.\nThe event is handled by `oauth-authorization` component.\n\nIf your application has own OAuth2 token exchange system then\nhandle the event and authorize the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1094,
              "column": 6
            },
            "end": {
              "line": 1118,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "True if event was sent. Can be false if event is not\nhandled or when the form is invalid."
          }
        },
        {
          "name": "_errorToast",
          "description": "Displays an error message in error toast",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1123,
              "column": 6
            },
            "end": {
              "line": 1127,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message",
              "type": "String",
              "description": "Message to display."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "generateState",
          "description": "Generates `state` parameter for the OAuth2 call.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1134,
              "column": 6
            },
            "end": {
              "line": 1141,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String",
            "desc": "Generated state string."
          }
        },
        {
          "name": "getSettings",
          "description": "Returns current configuration of the OAuth2.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1148,
              "column": 6
            },
            "end": {
              "line": 1207,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Current OAuth2 configuration."
          }
        },
        {
          "name": "_computeAuthCustomData",
          "description": "Adds `customData` property values that can be applied to the\nauthorization request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1215,
              "column": 6
            },
            "end": {
              "line": 1220,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail",
              "type": "Object",
              "description": "Token request detail object. The object is passed\nby reference so no need for return value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeTokenCustomData",
          "description": "Adds `customData` property values that can be applied to the\ntoken request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1228,
              "column": 6
            },
            "end": {
              "line": 1241,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail",
              "type": "Object",
              "description": "Token request detail object. The object is passed\nby reference so no need for return value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeCustomParameters",
          "description": "Computes list of parameter values from current model.\n\nThis function ignores empty values if they are not required.\nRequired property are always included, even if the value is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1252,
              "column": 6
            },
            "end": {
              "line": 1286,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "Model for form inputs."
            }
          ],
          "return": {
            "type": "(Array | undefined)",
            "desc": "Array of objects with `name` and `value`\nproperties or undefined if `params` is empty or no values are available."
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1292,
              "column": 6
            },
            "end": {
              "line": 1318,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeHasToken",
          "description": "Computes value for `hasAccessToken` property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1325,
              "column": 6
            },
            "end": {
              "line": 1327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "String",
              "description": "Token changed value"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_oauth2ErrorHandler",
          "description": "Handler for `oauth2-error` custom event.\nInforms the user about the error in the flow if the state property\nis the one used with the request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1335,
              "column": 6
            },
            "end": {
              "line": 1347,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenSuccessHandler",
          "description": "Handler for the token response from the authorization component.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1353,
              "column": 6
            },
            "end": {
              "line": 1380,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_amfChanged",
          "description": "Handler to set up data from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1386,
              "column": 6
            },
            "end": {
              "line": 1424,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Security model of AMF"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupOAuthDeliveryMethod",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1426,
              "column": 6
            },
            "end": {
              "line": 1434,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getOauth2DeliveryMethod",
          "description": "Determines placemenet of OAuth authorization token location.\nIt can be either query parameter or header. This function\nreads API spec to get this information or provides default if\nnot specifies.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1444,
              "column": 6
            },
            "end": {
              "line": 1480,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "info",
              "type": "Object",
              "description": "Security AMF model"
            }
          ],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "_preFillAmfData",
          "description": "Reads API security definition and applies itn to the view as predefined\nvalues.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1488,
              "column": 6
            },
            "end": {
              "line": 1514,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "AMF model describing settings of the security\nscheme"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_redSecurityScopes",
          "description": "Extracts scopes list from the security definition",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1520,
              "column": 6
            },
            "end": {
              "line": 1534,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Array"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          }
        },
        {
          "name": "_amfCustomSettingsKey",
          "description": "Finds a key for Custom settings",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1540,
              "column": 6
            },
            "end": {
              "line": 1554,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Security scheme settings object."
            }
          ],
          "return": {
            "type": "(String | undefined)"
          }
        },
        {
          "name": "_applyAnnotationGranst",
          "description": "Applies `authorizationGrants` from OAuth2 settings annotation.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1562,
              "column": 6
            },
            "end": {
              "line": 1593,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "gransts",
              "type": "Array",
              "description": "OAuth spec grants available for the endpoint"
            },
            {
              "name": "annotation",
              "type": "?Object",
              "description": "Read annotation."
            }
          ],
          "return": {
            "type": "Array",
            "desc": "List of granst to apply."
          }
        },
        {
          "name": "_setupAnotationParameters",
          "description": "Sets up annotation supported variables to apply form view for:\n- authorization query parameters\n- authorization headers\n- token query parameters\n- token headers\n- token body",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1604,
              "column": 6
            },
            "end": {
              "line": 1650,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "annotation",
              "type": "Object",
              "description": "Annotation applied to the OAuth settings"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupAuthRequestQueryParameters",
          "description": "Sets up query parameters to be used with authorization request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1656,
              "column": 6
            },
            "end": {
              "line": 1662,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestQueryParameters",
          "description": "Sets up query parameters to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1668,
              "column": 6
            },
            "end": {
              "line": 1674,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestHeaders",
          "description": "Sets up headers to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1680,
              "column": 6
            },
            "end": {
              "line": 1686,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setupTokenRequestBody",
          "description": "Sets up body parameters to be used with token request.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1692,
              "column": 6
            },
            "end": {
              "line": 1698,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "params",
              "type": "Array",
              "description": "List of parameters from the annotation."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createViewModel",
          "description": "Creats a form view model for type items.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1706,
              "column": 6
            },
            "end": {
              "line": 1716,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "param",
              "type": "(Array | object)",
              "description": "Property or list of properties to process."
            },
            {
              "name": "modelOptions",
              "type": "Object"
            }
          ],
          "return": {
            "type": "(Array | undefined)",
            "desc": "Form view model or undefined if not set."
          }
        },
        {
          "name": "_computeIsCustomGrant",
          "description": "Computes value of `isCustomGrant` property when `grantType` changes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1724,
              "column": 6
            },
            "end": {
              "line": 1727,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Selected grant type."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "`true` if the `grantType` is none of the ones defined\nby the OAuth 2.0 spec."
          }
        },
        {
          "name": "_updateGrantTypes",
          "description": "Updates list of OAuth grant types supported by current endpoint.\nThe information should be available in RAML file.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1735,
              "column": 6
            },
            "end": {
              "line": 1751,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "supportedTypes",
              "type": "Array.<String>?",
              "description": "List of supported types. If empty\nor not set then all available types will be displayed."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeGrantList",
          "description": "Computes list of grant types to render in the form.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1760,
              "column": 6
            },
            "end": {
              "line": 1784,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowed",
              "type": "?Array.<String>",
              "description": "List of types allowed by the\ncomponent configuration or API spec applied to this element. If empty\nor not set then all OAuth 2.0 default types are returned."
            }
          ],
          "return": {
            "type": "Array.<Object>"
          }
        },
        {
          "name": "_computeIsSelectedType",
          "description": "Computes boolean value for `isSelectedType` if `grantType` is set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1791,
              "column": 6
            },
            "end": {
              "line": 1793,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Current grant type."
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True when the value is set."
          }
        },
        {
          "name": "_clearTypeSelection",
          "description": "Clears grant type selection.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1797,
              "column": 6
            },
            "end": {
              "line": 1799,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeSelectedTypeLabel",
          "description": "Computes the label for selected step title.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1806,
              "column": 6
            },
            "end": {
              "line": 1823,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "grantType",
              "type": "String",
              "description": "Selected grant type."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Label to render"
          }
        },
        {
          "name": "_updateStepperState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1825,
              "column": 6
            },
            "end": {
              "line": 1827,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noStepper"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_noGrantTypeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1829,
              "column": 6
            },
            "end": {
              "line": 1835,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` custom event.\nIf the panel is opened the it checks if current header updates\nauthorization.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1842,
              "column": 6
            },
            "end": {
              "line": 1871,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleDocumentation",
          "description": "Toggles documentartion for custom property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1877,
              "column": 6
            },
            "end": {
              "line": 1899,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDocsElements",
          "description": "Creates a documentation element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1906,
              "column": 6
            },
            "end": {
              "line": 1922,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            },
            {
              "name": "appendTo",
              "type": "Element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearDocs",
          "description": "Clears all custom data documention nodes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1926,
              "column": 6
            },
            "end": {
              "line": 1932,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_analyticsEvent",
          "description": "Dispatches analytics event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1941,
              "column": 6
            },
            "end": {
              "line": 1953,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "category",
              "type": "String",
              "description": "Event category"
            },
            {
              "name": "action",
              "type": "String",
              "description": "Event action"
            },
            {
              "name": "label",
              "type": "String",
              "description": "Event label"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clickCopyAction",
          "description": "A handler for `focus` event on a label that contains text and\nshould be coppied to clipboard when user is interacting with it.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1960,
              "column": 6
            },
            "end": {
              "line": 1980,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "ClickEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oauth2.html",
          "description": ""
        },
        {
          "url": "demo/oauth2-amf.html",
          "description": "Using AMF data model"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 560,
          "column": 4
        },
        "end": {
          "line": 2045,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodOauth2",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "grant-type",
          "description": "Seleted authorization grand type.",
          "sourceRange": {
            "start": {
              "line": 565,
              "column": 10
            },
            "end": {
              "line": 570,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "is-custom-grant",
          "description": "Computed value, true if the grant type is a cutom definition.",
          "sourceRange": {
            "start": {
              "line": 574,
              "column": 10
            },
            "end": {
              "line": 578,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-selected-type",
          "description": "Computed value, true if the `grantType` is set.",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 10
            },
            "end": {
              "line": 584,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "force-hide-type-selector",
          "description": "If true, OAuth flow selector will be collapsed.",
          "sourceRange": {
            "start": {
              "line": 588,
              "column": 10
            },
            "end": {
              "line": 591,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "client-id",
          "description": "The client ID for the auth token.",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 10
            },
            "end": {
              "line": 597,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "client-secret",
          "description": "The client secret. It to be used when selected server flow.",
          "sourceRange": {
            "start": {
              "line": 599,
              "column": 10
            },
            "end": {
              "line": 603,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "authorization-uri",
          "description": "The authorization URL to initialize the OAuth flow.",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 10
            },
            "end": {
              "line": 609,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "access-token-uri",
          "description": "The access token URL to exchange code for token. It is used in server flow.",
          "sourceRange": {
            "start": {
              "line": 611,
              "column": 10
            },
            "end": {
              "line": 615,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "password",
          "description": "The password. To be used with the password flow.",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 10
            },
            "end": {
              "line": 621,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "username",
          "description": "The password. To be used with the password flow.",
          "sourceRange": {
            "start": {
              "line": 623,
              "column": 10
            },
            "end": {
              "line": 627,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "redirect-uri",
          "description": "A callback URL to be used with this element.\nUser can't change the callback URL and it will inform the user to setup OAuth to use\nthis value.\n\nThis is relevant when selected flow is the browser flow.",
          "sourceRange": {
            "start": {
              "line": 635,
              "column": 10
            },
            "end": {
              "line": 638,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scopes",
          "description": "List of user selected scopes.\nIt can be pre-populated with list of scopes (array of strings).",
          "sourceRange": {
            "start": {
              "line": 643,
              "column": 10
            },
            "end": {
              "line": 645,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "allowed-scopes",
          "description": "List of pre-defined scopes to choose from. It will be passed to the `oauth2-scope-selector`\nelement.",
          "sourceRange": {
            "start": {
              "line": 650,
              "column": 10
            },
            "end": {
              "line": 650,
              "column": 30
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "prevent-custom-scopes",
          "description": "If true then the `oauth2-scope-selector` will disallow to add a scope that is not\nin the `allowedScopes` list. Has no effect if the `allowedScopes` is not set.",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 10
            },
            "end": {
              "line": 655,
              "column": 38
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "access-token",
          "description": "When the user authorized the app it should be set to the token value.\nThis element do not perform authorization. Other elements must intercept\n`oauth2-token-requested` and perform the authorization. As a result the element\nperforming an authorization should set back the auth token on the event target object\n(this element).",
          "sourceRange": {
            "start": {
              "line": 665,
              "column": 10
            },
            "end": {
              "line": 668,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-type",
          "description": "Received from the response token value.\nBy default it is \"bearer\" as the only one defined in OAuth 2.0\nspec.\nIf the token response contains `tokenType` property this value is\nupdated.",
          "sourceRange": {
            "start": {
              "line": 676,
              "column": 10
            },
            "end": {
              "line": 680,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "has-access-token",
          "description": "Computed value, true if access token is set.",
          "sourceRange": {
            "start": {
              "line": 682,
              "column": 10
            },
            "end": {
              "line": 686,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "amf-settings",
          "description": "AMF json/ld mode describing security scheme.",
          "sourceRange": {
            "start": {
              "line": 690,
              "column": 10
            },
            "end": {
              "line": 693,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "grant-types",
          "description": "Currently available grant types.",
          "sourceRange": {
            "start": {
              "line": 696,
              "column": 10
            },
            "end": {
              "line": 699,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "no-auto",
          "description": "The element will automatically hide following fileds it the element has been initialized\nwith values for this fields (without user interaction):\n\n- autorization url\n- token url\n- scopes\n\nIf all this values are set then the element will set `isAdvanced` attribute and set\n`advancedOpened` to false\n\nSetting this property will prevent this behavior.",
          "sourceRange": {
            "start": {
              "line": 727,
              "column": 10
            },
            "end": {
              "line": 727,
              "column": 25
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "is-advanced",
          "description": "If set it will render autorization url, token url and scopes as advanced options\nactivated on user interaction.",
          "sourceRange": {
            "start": {
              "line": 732,
              "column": 10
            },
            "end": {
              "line": 732,
              "column": 29
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "advanced-opened",
          "description": "If true then the advanced options are opened.",
          "sourceRange": {
            "start": {
              "line": 736,
              "column": 10
            },
            "end": {
              "line": 736,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-grant-type",
          "description": "If set, the grant typr selector will be hidden from the UI.",
          "sourceRange": {
            "start": {
              "line": 740,
              "column": 10
            },
            "end": {
              "line": 743,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "auth-query-parameters",
          "description": "List of query parameters to apply to authorization request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 752,
              "column": 10
            },
            "end": {
              "line": 755,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-query-parameters",
          "description": "List of query parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 764,
              "column": 10
            },
            "end": {
              "line": 767,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-headers",
          "description": "List of headers to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 776,
              "column": 10
            },
            "end": {
              "line": 779,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "token-body",
          "description": "List of body parameters to apply to token request.\nThis is allowed by the OAuth 2.0 spec as an extension of the\nprotocol.\nThis value is computed if the `ramlSettings` contains annotations\nand one of it is `customSettings`.\nSee https://github.com/raml-org/raml-annotations for definition.",
          "sourceRange": {
            "start": {
              "line": 788,
              "column": 10
            },
            "end": {
              "line": 791,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "oauth-delivery-method",
          "description": "Default delivery method of access token. Reported with\nsettings change event as `deliveryMethod`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default placement of the token.",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 10
            },
            "end": {
              "line": 804,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "oauth-delivery-name",
          "description": "Default parameter name that carries access token. Reported with\nthe settings change event as `deliveryName`.\n\nThis value is added to event's `settings` property.\n\nWhen setting AMF model, this value may change, if AMF description\nforces different than default parameter name for the token.",
          "sourceRange": {
            "start": {
              "line": 814,
              "column": 10
            },
            "end": {
              "line": 817,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "narrow",
          "description": "Renders slightly different view that is optymized for mobile\nor narrow area on desktop.",
          "sourceRange": {
            "start": {
              "line": 822,
              "column": 10
            },
            "end": {
              "line": 825,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.\n\nThis event will set current settings as a detail object which are the same as for the\n`oauth2-token-requested` event. Additionally it will contain a `accessToken` property. This\nvalye can be `undefined` if token hasn't been requested yet by the user.\nClients should support a situaltion when the user do not request the token before requesting\nthe resource and perform authorization.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth2-token-ready",
          "description": "Fired when the request token has been obtained and it's ready to serve.\nBecause only one auth panel can be displayed ad a time it can be assumed\nthat if new token has been obtained then it is current authorization\nmethod.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth2-token-requested",
          "description": "Fired when user requested to perform an authorization.\nThe details object vary depends on the `grantType` property.\nHowever this event always fire two properties set on the `detail` object: `type` and\n`clientId`.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "grant-type-changed",
          "description": "Fired when the `grantType` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "client-id-changed",
          "description": "Fired when the `clientId` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "client-secret-changed",
          "description": "Fired when the `clientSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "authorization-uri-changed",
          "description": "Fired when the `authorizationUri` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "access-token-uri-changed",
          "description": "Fired when the `accessTokenUri` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "password-changed",
          "description": "Fired when the `password` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "username-changed",
          "description": "Fired when the `username` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-oauth2",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin",
        "ApiElements.AmfHelperMixin"
      ]
    },
    {
      "description": "The `<auth-method-oauth1>` element displays a form to provide the OAuth 1a settings.\n\n### Example\n\n```html\n<auth-method-oauth1 consumer-key=\"xyz\"></auth-method-oauth1>\n```\n\n### Required form fields\n\n- Consumer key\n- Timestamp\n- Nonce\n- Signature method\n\n## Authorizing the user\n\nThis element displays form for user input only. To perform authorization and\nlater to sign the request, add `oauth-authorization/oauth1-authorization.html`\nto the DOM. This element sends `oauth1-token-requested` that is handled by\nautorization element.\n\nNote that the OAuth1 authorization wasn't designed for browser. Most existing\nOAuth1 implementation disallow browsers to perform the authorization by\nnot allowing POST requests to authorization server. Therefore receiving token\nmay not be possible without using browser extensions to alter HTTP request to\nenable CORS.\nIf the server disallow obtaining authorization token and secret from clients\nthen the application should listen for `oauth1-token-requested` custom event\nand perform authorization on the server side.\n\nWhen application is performing authorization instead of `oauth1-authorization`\nelement then the application should dispatch `oauth1-token-response` custom event\nwith `oauth_token` and `oauth_token_secret` properties set on detail object.\nThis element handles the response to reset UI state and to updates other elements\nstatus that works with authorization.\n\n## Signing the request\n\nSee description for `oauth-authorization/oauth1-authorization.html` element.\n\n### Styling\n\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-oauth1` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n\n### Theming\n\nUse this mixins as a theming option across all ARC elements.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--icon-button` | Mixin applied to `paper-icon-buttons`. | `{}`\n`--icon-button-hover` | Mixin applied to `paper-icon-buttons` when hovered. | `{}`\n`--input-line-color` | Mixin applied to the input underline | `{}`\n`--auth-button` | Mixin applied to authorization and next buttons` | `{}`\n`--auth-button-hover` | Mixin for :hover state for authorization and next buttons` | `{}`\n`--auth-button-disabled` | Mixin for disabled state for authorization and next buttons` | `{}`\n\n## Changes in version 2\n- Crypto library is no linger included into the element.\nUse `advanced-rest-client/cryptojs-lib` component to include the library if your project doesn't use crypto libraries already.",
      "summary": "",
      "path": "auth-method-oauth1.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "defaultSignatureMethods",
          "type": "?",
          "description": "Returns default list of signature methods for OAuth1\n     ",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 324,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "consumerKey",
          "type": "string | null | undefined",
          "description": "Client ID aka consumer key",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "consumerSecret",
          "type": "string | null | undefined",
          "description": "The client secret aka consumer secret",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "Oauth 1 token (from the oauth console)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 220,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenSecret",
          "type": "string | null | undefined",
          "description": "Oauth 1 token secret (from the oauth console)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 8
            },
            "end": {
              "line": 226,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "timestamp",
          "type": "number | null | undefined",
          "description": "Timestamp",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 8
            },
            "end": {
              "line": 232,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "nonce",
          "type": "string | null | undefined",
          "description": "The nonce generated for this request",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 8
            },
            "end": {
              "line": 238,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "realm",
          "type": "string | null | undefined",
          "description": "Optional realm",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "signatureMethod",
          "type": "string | null | undefined",
          "description": "Signature method. Enum {`HMAC-SHA256`, `HMAC-SHA1`, `PLAINTEXT`}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 8
            },
            "end": {
              "line": 253,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"HMAC-SHA1\""
        },
        {
          "name": "_authorizing",
          "type": "boolean | null | undefined",
          "description": "True when currently authorizing the user.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 255,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "redirectUrl",
          "type": "string | null | undefined",
          "description": "Authorization callback URL",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "requestTokenUrl",
          "type": "string | null | undefined",
          "description": "OAuth1 endpoint to obtain request token to request user authorization.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 8
            },
            "end": {
              "line": 269,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "accessTokenUrl",
          "type": "string | null | undefined",
          "description": "Endpoint to authorize the token.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "authTokenMethod",
          "type": "string | null | undefined",
          "description": "HTTP method to obtain authorization header.\nSpec recommends POST",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 8
            },
            "end": {
              "line": 285,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"POST\""
        },
        {
          "name": "authParamsLocation",
          "type": "string | null | undefined",
          "description": "A location of the OAuth 1 authorization parameters.\nIt can be either in the URL as a query string (`querystring` value)\nor in the authorization header (`authorization`) value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 8
            },
            "end": {
              "line": 295,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"authorization\""
        },
        {
          "name": "authorizationUrl",
          "type": "string | null | undefined",
          "description": "An URL to authentication endpoint where the user should be redirected\nto auththorize the app.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 8
            },
            "end": {
              "line": 303,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_settingsChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "RAML `securedBy` obejct definition.\nIf set, it will prefill the settings in the auth panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 311,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_amfSettingsChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "signatureMethods",
          "type": "Array | null | undefined",
          "description": "List of currently support signature methods.\nThis can be updated when `amfSettings` property is set.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 8
            },
            "end": {
              "line": 316,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 291,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "Computes API version from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel",
              "type": "(Object | Array.<Object>)"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 465,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 485,
              "column": 4
            },
            "end": {
              "line": 493,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 500,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 551,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 565,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 577,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 598,
              "column": 4
            },
            "end": {
              "line": 604,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 627,
              "column": 4
            },
            "end": {
              "line": 648,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 660,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 668,
              "column": 4
            },
            "end": {
              "line": 671,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 679,
              "column": 4
            },
            "end": {
              "line": 690,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 698,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 718,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 725,
              "column": 4
            },
            "end": {
              "line": 746,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 755,
              "column": 4
            },
            "end": {
              "line": 762,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 771,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 795,
              "column": 4
            },
            "end": {
              "line": 810,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 831,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 845,
              "column": 4
            },
            "end": {
              "line": 894,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 918,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 937,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 950,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 959,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 979,
              "column": 4
            },
            "end": {
              "line": 1000,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1006,
              "column": 4
            },
            "end": {
              "line": 1032,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 359,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_settingsChanged",
          "description": "Called each time when any of the settings change. It informs application\nthat the user updated the form.\nIt fires `auth-settings-changed` custom event even if the form is invalid\n(missing some info).\n\nThe `valid` property is always if `settings.token` amd\n`settings.tokenSecret` is not set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 4
            },
            "end": {
              "line": 387,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getSettings",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 4
            },
            "end": {
              "line": 407,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 4
            },
            "end": {
              "line": 429,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "settings",
              "type": "Object",
              "description": "Object returned by `_getSettings()`"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearField",
          "description": "Removes a value from the (paper-)input going up through path of the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 432,
              "column": 4
            },
            "end": {
              "line": 444,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "authorize",
          "description": "Sends the `oauth2-token-requested` event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 4
            },
            "end": {
              "line": 503,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "True if event was sent. Can be false if event is not\nhandled or when the form is invalid."
          }
        },
        {
          "name": "_oauth1ErrorHandler",
          "description": "Handles OAuth1 authorization errors.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 507,
              "column": 4
            },
            "end": {
              "line": 512,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenResponseHandler",
          "description": "Handler for the `oauth1-token-response` custom event.\nSets `token` and `tokenSecret` properties from the event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 521,
              "column": 4
            },
            "end": {
              "line": 525,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_genTimestamp",
          "description": "Returns current timestamp in seconds",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 527,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_genNonce",
          "description": "Returns autogenerated nocne",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 536,
              "column": 4
            },
            "end": {
              "line": 548,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "length",
              "type": "?Number",
              "description": "Optional, size of generated string. Default to 32."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Generated nonce string."
          }
        },
        {
          "name": "_amfSettingsChanged",
          "description": "Called when the AMF object change",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 4
            },
            "end": {
              "line": 589,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/oauth1.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 199,
          "column": 2
        },
        "end": {
          "line": 617,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodOauth1",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "consumer-key",
          "description": "Client ID aka consumer key",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 8
            },
            "end": {
              "line": 208,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "consumer-secret",
          "description": "The client secret aka consumer secret",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token",
          "description": "Oauth 1 token (from the oauth console)",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 220,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-secret",
          "description": "Oauth 1 token secret (from the oauth console)",
          "sourceRange": {
            "start": {
              "line": 222,
              "column": 8
            },
            "end": {
              "line": 226,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "timestamp",
          "description": "Timestamp",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 8
            },
            "end": {
              "line": 232,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "nonce",
          "description": "The nonce generated for this request",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 8
            },
            "end": {
              "line": 238,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "realm",
          "description": "Optional realm",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 8
            },
            "end": {
              "line": 244,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "signature-method",
          "description": "Signature method. Enum {`HMAC-SHA256`, `HMAC-SHA1`, `PLAINTEXT`}",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 8
            },
            "end": {
              "line": 253,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "redirect-url",
          "description": "Authorization callback URL",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 8
            },
            "end": {
              "line": 262,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "request-token-url",
          "description": "OAuth1 endpoint to obtain request token to request user authorization.",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 8
            },
            "end": {
              "line": 269,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "access-token-url",
          "description": "Endpoint to authorize the token.",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 8
            },
            "end": {
              "line": 276,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-token-method",
          "description": "HTTP method to obtain authorization header.\nSpec recommends POST",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 8
            },
            "end": {
              "line": 285,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auth-params-location",
          "description": "A location of the OAuth 1 authorization parameters.\nIt can be either in the URL as a query string (`querystring` value)\nor in the authorization header (`authorization`) value.",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 8
            },
            "end": {
              "line": 295,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "authorization-url",
          "description": "An URL to authentication endpoint where the user should be redirected\nto auththorize the app.",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 8
            },
            "end": {
              "line": 303,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "amf-settings",
          "description": "RAML `securedBy` obejct definition.\nIf set, it will prefill the settings in the auth panel.",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 8
            },
            "end": {
              "line": 311,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "signature-methods",
          "description": "List of currently support signature methods.\nThis can be updated when `amfSettings` property is set.",
          "sourceRange": {
            "start": {
              "line": 316,
              "column": 8
            },
            "end": {
              "line": 316,
              "column": 31
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "oauth1-token-requested",
          "description": "Fired when user requested to perform an authorization.\nThe details object vary depends on the `grantType` property.\nHowever this event always fire two properties set on the `detail` object: `type` and\n`clientId`.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "consumer-key-changed",
          "description": "Fired when the `consumerKey` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "consumer-secret-changed",
          "description": "Fired when the `consumerSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "token-changed",
          "description": "Fired when the `token` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "token-secret-changed",
          "description": "Fired when the `tokenSecret` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "timestamp-changed",
          "description": "Fired when the `timestamp` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "nonce-changed",
          "description": "Fired when the `nonce` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "realm-changed",
          "description": "Fired when the `realm` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "signature-method-changed",
          "description": "Fired when the `signatureMethod` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-oauth1",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin",
        "ApiElements.AmfHelperMixin"
      ]
    },
    {
      "description": "The `<auth-method-custom>` element displays a form to provide the\nauthorization details for RAML's custom security scheme.\n\nThe element, alike other auth methods, dispatches `auth-settings-changed`\ncustom event. However, it also sends `request-header-changed` and\n`query-parameters-changed` custom event to directly manipulate values\nin corresponding UI element. This events are supported with all API components\nthat handles headers or query parameters.\n\nThis element is rendered empty if `amfSettings` property is not set.\nParent element or application should check if model contains the scheme.\n\n### Example\n\n```html\n<auth-method-custom security-scheme=\"{...}\"></auth-method-custom>\n```\n\n### Styling\n`<auth-methods>` provides the following custom properties and mixins for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--auth-method-custom` | Mixin applied to the element. | `{}`\n`--auth-method-panel` | Mixin applied to all auth elements. | `{}`\n`--inline-help-icon-color` | Color of the icon button to display help | `rgba(0, 0, 0, 0.74)`\n`--inline-help-icon-color-hover` | Color of the icon button to display help when hovered | `--accent-color` or `rgba(0, 0, 0, 0.88)`\n`--raml-headers-form-input-label-color` | Color of the lable of the `paper-input` element. | `rgba(0, 0, 0, 0.48)`\n`raml-headers-form-input-label-color-required` | Color of the lable of the `paper-input` element when it's required. | `rgba(0, 0, 0, 0.72)`\n\n## Changes in version 2\n\n- The element now works with AMF json/ld data model. RAML json parser output\nis no longer supported.\n- `ramlSettings` has been renamed to `amfSettings`\n- Added scheme title and documentation to the panel.",
      "summary": "",
      "path": "auth-method-custom.html",
      "properties": [
        {
          "name": "eventsTarget",
          "type": "Object | null | undefined",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_eventsTargetChanged\"",
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_oldEventsTarget",
          "type": "Object | null | undefined",
          "description": "An event target used to attach listeners.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 78,
              "column": 8
            },
            "end": {
              "line": 78,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "stepStartIndex",
          "type": "number | null | undefined",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noSteps",
          "type": "boolean | null | undefined",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "Setting passed to paper buttons.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noDocs",
          "type": "boolean | null | undefined",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "privacy": "public",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amfModel",
          "type": "(Object | Array)",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "type": "Object | null | undefined",
          "description": "A namespace for AMF model",
          "privacy": "public",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "amfSettings",
          "type": "Object | null | undefined",
          "description": "AMF security scheme model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "headers",
          "type": "Array | null | undefined",
          "description": "Computed list of headers to render in the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "queryParameters",
          "type": "Array | null | undefined",
          "description": "Computed list of query parameters to render.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "hasHeaders",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if headers are defined in RAML settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 8
            },
            "end": {
              "line": 207,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasQueryParameters",
          "type": "boolean | null | undefined",
          "description": "Computed value, true if query parameters are defined in RAML settings.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "schemeName",
          "type": "string | null | undefined",
          "description": "Name of the security scheme",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "schemeDescription",
          "type": "string | null | undefined",
          "description": "Security scheme description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 8
            },
            "end": {
              "line": 226,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "documentationOpened",
          "type": "boolean | null | undefined",
          "description": "True to opend scheme descripyion, if available.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 8
            },
            "end": {
              "line": 230,
              "column": 36
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 86,
              "column": 5
            },
            "end": {
              "line": 91,
              "column": 6
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_eventsTargetChanged",
          "description": "Removes old handlers (if any) and attaches listeners on new event\nevent target.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 105,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventsTarget",
              "type": "?Node",
              "description": "Event target to set handlers on. If not set it\nwill set handlers on the `window` object."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "_attachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 4
            },
            "end": {
              "line": 251,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_detachListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 4
            },
            "end": {
              "line": 256,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getAuthType",
          "description": "Gets a oauth type by the elemnt name.\nPossible values: 'basic', 'ntlm', 'oauth1', 'oauth2', 'digest', 'custom'\nor undefined.",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 81,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_notifySettingsChange",
          "description": "Gathers data by calling `validate()` and `getSettings()` function and\ndispatches `auth-settings-changed` custom event",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Auth form type."
            }
          ],
          "return": {
            "type": "CustomEvent",
            "desc": "Dispatched event"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_computeHasDoc",
          "description": "Computes value for conditions containg documentation block.\nIt always returns false if `noDocs` is true. Otherwise it returns\nboolean value of the `value` argument",
          "privacy": "protected",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 131,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noDocs",
              "type": "Boolean",
              "description": "Value of the `noDocs` property"
            },
            {
              "name": "value",
              "type": "(Boolean | String)",
              "description": "Docs value"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "_getAmfKey",
          "description": "Returns compact model key for given value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "property",
              "type": "String",
              "description": "AMF orioginal property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Compact model property name or the same value if\nvalue not found in the context."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureAmfModel",
          "description": "Ensures that the model is AMF object.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf",
              "type": "(Object | Array)",
              "description": "AMF json/ld model"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "API spec"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureArray",
          "description": "Ensures that the value is an array.\nIt returns undefined when there's no value.\nIt returns the same array if the value is already an array.\nIt returns new array of the item is not an array.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 207,
              "column": 4
            },
            "end": {
              "line": 215,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(Array | any)",
              "description": "An item to test"
            }
          ],
          "return": {
            "type": "(Array | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValue",
          "description": "Gets a signle scalar value from a model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 222,
              "column": 4
            },
            "end": {
              "line": 240,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "any",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getValueArray",
          "description": "Gets values from a model as an array of `@value` properties.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 254,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Amf model to extract the value from."
            },
            {
              "name": "key",
              "type": "String",
              "description": "Model key to search for the value"
            }
          ],
          "return": {
            "type": "Array.<any>",
            "desc": "Value for key"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasType",
          "description": "Checks if a model has a type.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 261,
              "column": 4
            },
            "end": {
              "line": 273,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Model to test"
            },
            {
              "name": "type",
              "type": "String",
              "description": "Type name"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "True if model has a type."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_hasProperty",
          "description": "Checks if a shape has a property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "?Object",
              "description": "The shape to test"
            },
            {
              "name": "key",
              "type": "?String",
              "description": "Property name to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyArray",
          "description": "Computes array value of a property in a model (shape).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 291,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(Array.<any> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyObject",
          "description": "Computes a value of a property in a model (shape).\nIt takes first value of a property, if exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 310,
              "column": 4
            },
            "end": {
              "line": 314,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape object"
            },
            {
              "name": "key",
              "type": "String",
              "description": "Property name"
            }
          ],
          "return": {
            "type": "(any | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasStringValue",
          "description": "Tests if a passed argumet exists.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 321,
              "column": 4
            },
            "end": {
              "line": 323,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "(String | Object | Number)",
              "description": "A value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasArrayValue",
          "description": "Computes if passed argument is an array and has a value.\nIt does not check for type or value of the array items.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 332,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Array",
              "description": "Value to test"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDescription",
          "description": "Computes description for a shape.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 340,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF shape"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Description value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHeaders",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 344,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeQueryParameters",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 348,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeResponses",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 350,
              "column": 4
            },
            "end": {
              "line": 352,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServerVariables",
          "description": "Computes value for `serverVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 359,
              "column": 4
            },
            "end": {
              "line": 361,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Variables if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointVariables",
          "description": "Computes value for `endpointVariables` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 368,
              "column": 4
            },
            "end": {
              "line": 370,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Parameters if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePayload",
          "description": "Computes value for the `payload` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 377,
              "column": 4
            },
            "end": {
              "line": 379,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "expects",
              "type": "Object",
              "description": "Current value of `expects` property."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "Payload model if defined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReturns",
          "description": "Computes value for `returns` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 386,
              "column": 4
            },
            "end": {
              "line": 388,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurity",
          "description": "Computes value for `security` property",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 395,
              "column": 4
            },
            "end": {
              "line": 397,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeHasCustomProperties",
          "description": "Computes value for `hasCustomProperties` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 404,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Boolean"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeApiVersion",
          "description": "Computes API version from the AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 419,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amfModel",
              "type": "(Object | Array.<Object>)"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEncodes",
          "description": "Computes model's `encodes` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 438,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "?Object",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of encodes"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDeclares",
          "description": "Computes list of declarations in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 458,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferences",
          "description": "Computes list of references in the AMF api model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 465,
              "column": 4
            },
            "end": {
              "line": 478,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of declarations"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeWebApi",
          "description": "Computes AMF's `http://schema.org/WebAPI` model",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 485,
              "column": 4
            },
            "end": {
              "line": 493,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF json/ld model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Web API declaration."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeServer",
          "description": "Computes value for `server` property that is later used with other computations.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 500,
              "column": 4
            },
            "end": {
              "line": 508,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Array | Object)",
              "description": "AMF model for an API"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "The server model"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointUri",
          "description": "Computes endpoint's URI based on `amfModel` and `endpoint` models.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 518,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "Server model of AMF API."
            },
            {
              "name": "endpoint",
              "type": "Object",
              "description": "Endpoint model"
            },
            {
              "name": "baseUri",
              "type": "?String",
              "description": "Current value of `baseUri` property"
            },
            {
              "name": "version",
              "type": "?String",
              "description": "API current version"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Endpoint's URI"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getBaseUri",
          "description": "Computes base URI value from either `baseUri`, `iron-meta` with\n`ApiBaseUri` key or `amfModel` value (in this order).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 540,
              "column": 4
            },
            "end": {
              "line": 551,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "baseUri",
              "type": "String",
              "description": "Value of `baseUri` property"
            },
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported protocols"
            }
          ],
          "return": {
            "type": "String",
            "desc": "Base uri value. Can be empty string."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getAmfBaseUri",
          "description": "Computes base URI from AMF model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 561,
              "column": 4
            },
            "end": {
              "line": 565,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "server",
              "type": "Object",
              "description": "AMF API model for Server."
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "Listy of supporte dprotocols. If not\nprovided and required to compute the url it uses `amfModel` to compute\nprotocols"
            }
          ],
          "return": {
            "type": "(String | undefined)",
            "desc": "Base uri value if exists."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_ensureUrlScheme",
          "description": "A function that makes sure that the URL has a scheme definition.\nIf no supported protocols information is available it assumes `http`.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 577,
              "column": 4
            },
            "end": {
              "line": 591,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "String",
              "description": "A url value"
            },
            {
              "name": "protocols",
              "type": "?Array.<String>",
              "description": "List of supported by the API protocols\nAn array of string like: `['HTTP', 'HTTPS']`. It lowercase the value.\nIf not set it tries to read supported protocols value from `amfModel`\nproperty."
            }
          ],
          "return": {
            "type": "String",
            "desc": "Url with scheme."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeProtocols",
          "description": "Computes supported protocols by the API.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 598,
              "column": 4
            },
            "end": {
              "line": 604,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "(Object | Array)",
              "description": "AMF data model"
            }
          ],
          "return": {
            "type": "(Array.<String> | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExpects",
          "description": "Computes value for the `expects` property.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 611,
              "column": 4
            },
            "end": {
              "line": 619,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "method",
              "type": "Object",
              "description": "AMF `supportedOperation` model"
            }
          ],
          "return": {
            "type": "Object"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computePropertyValue",
          "description": "Tries to find an example value (whether it's default value or from an\nexample) to put it into snippet's values.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 627,
              "column": 4
            },
            "end": {
              "line": 648,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "A http://raml.org/vocabularies/http#Parameter property"
            }
          ],
          "return": {
            "type": "(String | undefined)"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpoints",
          "description": "Computes list of endpoints from a WebApi model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 654,
              "column": 4
            },
            "end": {
              "line": 660,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object"
            }
          ],
          "return": {
            "type": "Array",
            "desc": "Always returns an array of endpoints."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointModel",
          "description": "Computes model for an endpoint documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 668,
              "column": 4
            },
            "end": {
              "line": 671,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Selected shape ID"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeEndpointByPath",
          "description": "Computes model for an endpoint documentation using it's path.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 679,
              "column": 4
            },
            "end": {
              "line": 690,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "path",
              "type": "String",
              "description": "Endpoint path"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endponit definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodModel",
          "description": "Computes method for the method documentation.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 698,
              "column": 4
            },
            "end": {
              "line": 704,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeOperations",
          "description": "Computes list of operations in an endpoint",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 711,
              "column": 4
            },
            "end": {
              "line": 718,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "id",
              "type": "String",
              "description": "Endpoint ID"
            }
          ],
          "return": {
            "type": "Array.<Object>",
            "desc": "List of SupportedOperation objects"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeMethodEndpoint",
          "description": "Computes an endpoint for a method.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 725,
              "column": 4
            },
            "end": {
              "line": 746,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "The WebApi AMF model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "An endpoint model of undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "__computeMethodsListForMethod",
          "description": "Computes a list of methods for an endpoint that contains a method with\ngiven id.",
          "privacy": "private",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 755,
              "column": 4
            },
            "end": {
              "line": 762,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "WebApi model"
            },
            {
              "name": "methodId",
              "type": "String",
              "description": "Method id."
            }
          ],
          "return": {
            "type": "(Array.<Object> | undefined)",
            "desc": "A list of sibling methods or undefined."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeType",
          "description": "Computes a type documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 771,
              "column": 4
            },
            "end": {
              "line": 788,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "references",
              "type": "?Array",
              "description": "Current value of `references` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A type definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeReferenceType",
          "description": "Computes a type model from a reference (library for example).",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 795,
              "column": 4
            },
            "end": {
              "line": 810,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "reference",
              "type": "(Object | Array)",
              "description": "AMF model for a reference to extract the data from"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Node ID to look for"
            }
          ],
          "return": {
            "type": "(Object | undefined)",
            "desc": "Type definition or undefined if not found."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeSecurityModel",
          "description": "Computes model for selected security definition.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 818,
              "column": 4
            },
            "end": {
              "line": 823,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "declares",
              "type": "Array",
              "description": "Current value of `declares` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A security definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeDocument",
          "description": "Computes a documentation model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 831,
              "column": 4
            },
            "end": {
              "line": 838,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "webApi",
              "type": "Object",
              "description": "Current value of `webApi` property"
            },
            {
              "name": "selected",
              "type": "String",
              "description": "Selected shape"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "A method definition"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolve",
          "description": "Resolves a reference to an external fragment.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 845,
              "column": 4
            },
            "end": {
              "line": 894,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape",
              "type": "Object",
              "description": "A shape to resolve"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "Resolved shape."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getLinkTarget",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 896,
              "column": 4
            },
            "end": {
              "line": 918,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getReferenceId",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 920,
              "column": 4
            },
            "end": {
              "line": 937,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "amf"
            },
            {
              "name": "id"
            }
          ],
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_resolveRecursive",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 939,
              "column": 4
            },
            "end": {
              "line": 950,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "shape"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_getExampleValue",
          "description": "Gets string value for an example data model.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 959,
              "column": 4
            },
            "end": {
              "line": 972,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "Object",
              "description": "Example item model"
            },
            {
              "name": "isJson",
              "type": "Boolean",
              "description": "If set it checks if the `raw` value is valid JSON.\nIf it isn't then it parses structured value."
            }
          ],
          "return": {
            "type": "String"
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeExampleFromStructuredValue",
          "description": "Computes an example from example structured value.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 979,
              "column": 4
            },
            "end": {
              "line": 1000,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "`structuredValue` item model."
            }
          ],
          "return": {
            "type": "(Object | Array)",
            "desc": "Javascript object or array with structured value."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "_computeStructuredExampleValue",
          "description": "Computes value with propert data type for a structured example.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 1006,
              "column": 4
            },
            "end": {
              "line": 1032,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object",
              "description": "Structured example item model."
            }
          ],
          "return": {
            "type": "(String | Boolean | Number)",
            "desc": "Value for the example."
          },
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 263,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "validate",
          "description": "Validates the form.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "`true` if valid, `false` otherwise."
          }
        },
        {
          "name": "_schemeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__schemeChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 312,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createViewModel",
          "description": "Generates view model using the tranformer.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 335,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Param type. Either `header` or `parameter`."
            },
            {
              "name": "model",
              "type": "Array"
            }
          ],
          "return": {
            "type": "Promise"
          }
        },
        {
          "name": "_computeHasData",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ]
        },
        {
          "name": "_settingsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 4
            },
            "end": {
              "line": 364,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "record"
            }
          ]
        },
        {
          "name": "getSettings",
          "description": "Returns current configuration of the OAuth2.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 370,
              "column": 4
            },
            "end": {
              "line": 376,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "Current OAuth2 configuration."
          }
        },
        {
          "name": "restore",
          "description": "Restores settings from stored value.\nFor custom methods this is dummy function.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 381,
              "column": 4
            },
            "end": {
              "line": 381,
              "column": 16
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_debounceNotify",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 4
            },
            "end": {
              "line": 392,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_notifySettingsChanged",
          "description": "Notifies about settings change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 396,
              "column": 4
            },
            "end": {
              "line": 408,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerValueChanged",
          "description": "Dispatches headers change event on user input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_queryValueChanged",
          "description": "Dispatches query parameter change event on user input.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 421,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_propertyValueChanged",
          "description": "Dispatches change event for headers and query parameters.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 439,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type",
              "type": "String",
              "description": "Change type. `header` or `parameter`."
            },
            {
              "name": "e",
              "type": "CustomEvent",
              "description": "Custom event dispatched by the form control."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_headerChangedHandler",
          "description": "Handler for the `request-header-changed` event.\nIt updates value for a single header if this header is already on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 444,
              "column": 4
            },
            "end": {
              "line": 446,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parameterChangedHandler",
          "description": "Handler for the `query-parameter-changed` event.\nIt updates value for a single parameter if this parameter is already on the list.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 451,
              "column": 4
            },
            "end": {
              "line": 453,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateEventValue",
          "description": "Update array value for given type (`headers` or `queryParameters`) for given event.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 4
            },
            "end": {
              "line": 482,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "target"
            },
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_toggleDocumentation",
          "description": "Toggles documentartion for custom property.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 4
            },
            "end": {
              "line": 510,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "CustomEvent"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createDocsElements",
          "description": "Creates a documentation element.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 517,
              "column": 4
            },
            "end": {
              "line": 530,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "model",
              "type": "Object"
            },
            {
              "name": "appendTo",
              "type": "Object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearDocs",
          "description": "Clears all custom data documention nodes.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 534,
              "column": 4
            },
            "end": {
              "line": 540,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleSchemeDocumentation",
          "description": "Toggles docs opened state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 544,
              "column": 4
            },
            "end": {
              "line": 546,
              "column": 5
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/custom.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 177,
          "column": 2
        },
        "end": {
          "line": 573,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "UiElements.AuthMethodCustom",
      "attributes": [
        {
          "name": "events-target",
          "description": "Events handlers target. By default the element listens on\n`window` object. If set, all events listeners will be attached to this\nobject instead of `window`.",
          "sourceRange": {
            "file": "../events-target-behavior/events-target-behavior.html",
            "start": {
              "line": 73,
              "column": 8
            },
            "end": {
              "line": 76,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ArcBehaviors.EventsTargetBehavior"
        },
        {
          "name": "step-start-index",
          "description": "A start index for elements step counter.\nBasic assumption is that this elements are used inside the\n`authorization` panel which has the first step (auth type selector).\nIf the element is to be used as a standalone element then this\nshould be set to `0` (zero) so the number for the first step will be\n`1`.\nBasic and NTLM auth elements has only one step. Other elements, with\nmore complex structure has more steps.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 52,
              "column": 8
            },
            "end": {
              "line": 55,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-steps",
          "description": "If true then the auth method will not render progress bar (stepper).",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 59,
              "column": 8
            },
            "end": {
              "line": 62,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "noink",
          "description": "Setting passed to paper buttons.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 66,
              "column": 8
            },
            "end": {
              "line": 66,
              "column": 22
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "no-docs",
          "description": "WHen set it prohibits methods from rendering inline documentation.",
          "sourceRange": {
            "file": "auth-methods-mixin.html",
            "start": {
              "line": 70,
              "column": 8
            },
            "end": {
              "line": 73,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "ArcBehaviors.AuthMethodsMixin"
        },
        {
          "name": "amf-model",
          "description": "Generated AMF json/ld model form the API spec.\nThe element assumes the object of the first array item to be a\ntype of `\"http://raml.org/vocabularies/document#Document`\non AMF vocabulary.\n\nIt is only usefult for the element to resolve references.",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 129,
              "column": 32
            }
          },
          "metadata": {},
          "type": "(Object | Array)",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "ns",
          "description": "A namespace for AMF model",
          "sourceRange": {
            "file": "../amf-helper-mixin/amf-helper-mixin.html",
            "start": {
              "line": 133,
              "column": 8
            },
            "end": {
              "line": 139,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "ApiElements.AmfHelperMixin"
        },
        {
          "name": "amf-settings",
          "description": "AMF security scheme model.",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 8
            },
            "end": {
              "line": 188,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "headers",
          "description": "Computed list of headers to render in the form.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 195,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "query-parameters",
          "description": "Computed list of query parameters to render.",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 8
            },
            "end": {
              "line": 202,
              "column": 9
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "has-headers",
          "description": "Computed value, true if headers are defined in RAML settings.",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 8
            },
            "end": {
              "line": 207,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-query-parameters",
          "description": "Computed value, true if query parameters are defined in RAML settings.",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 8
            },
            "end": {
              "line": 212,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "scheme-name",
          "description": "Name of the security scheme",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 8
            },
            "end": {
              "line": 219,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "scheme-description",
          "description": "Security scheme description",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 8
            },
            "end": {
              "line": 226,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "documentation-opened",
          "description": "True to opend scheme descripyion, if available.",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 8
            },
            "end": {
              "line": 230,
              "column": 36
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "auth-settings-changed",
          "description": "Fired when the any of the auth method settings has changed.\nThis event will be fired quite frequently - each time anything in the text field changed.\nWith one exception. This event will not be fired if the validation of the form didn't passed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-parameter-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "request-header-changed",
          "description": "Fired when the header value has changed.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "auth-method-custom",
      "mixins": [
        "ArcBehaviors.EventsTargetBehavior",
        "ArcBehaviors.AuthMethodsMixin",
        "ApiElements.AmfHelperMixin"
      ]
    }
  ]
}
