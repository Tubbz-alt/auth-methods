/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   auth-method-base.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {LitElement, html} from 'lit-element';

import {EventsTargetMixin} from '@advanced-rest-client/events-target-mixin/events-target-mixin.js';

export {AuthMethodBase};

/**
 * Base class for all authorization methods
 */
declare class AuthMethodBase extends
  EventsTargetMixin(
  LitElement) {
  constructor(type: any);

  /**
   * Restores settings from stored value.
   * Abstract to be overriten.
   */
  restore(): void;

  /**
   * Resets settings to default state
   */
  reset(): void;

  /**
   * Sets Observable Property.
   *
   * @param prop Property name to set
   * @param value A value to set
   * @returns True if property was changed.
   */
  _sop(prop: String|null, value: any|null): Boolean|null;
  _notifyChanged(prop: any, value: any): void;

  /**
   * Generates auth data model by calling `validate()` and `getSettings()` functions.
   *
   * @param type Auth form type.
   * @returns Gnerated data model
   */
  _createModel(type: String|null): object|null;

  /**
   * Generates data model and disaptches `auth-settings-changed` custom event.
   *
   * @param type Auth form type.
   * @returns Dispatched event
   */
  _notifySettingsChange(type: String|null): CustomEvent|null;

  /**
   * A coniniet method to set a property value and call the settings changed function.
   *
   * Note, this function is to be called from user input only. Calling this function
   * from a property change will cause invalid validation report.
   *
   * @param prop Name of the property to set
   * @param value A value to set.
   */
  _setSettingsInputValue(prop: String|null, value: any|null): void;

  /**
   * Dispatches `auth-settings-changed` custom event asynchronously or, if
   * `__isInputEvent` flag is set, synchronously.
   */
  _settingsChanged(): void;
  _getEventTarget(e: any): any;

  /**
   * Restores an item from a session store and assigns it to a local
   * property.
   *
   * @param sessionKey Session storage key
   * @param localKey This component's property
   */
  _restoreSessionProperty(sessionKey: String|null, localKey: String|null): void;

  /**
   * Stores a property in a session storage.
   *
   * @param sessionKey A storage key
   * @param value Value to store
   */
  _storeSessionProperty(sessionKey: String|null, value: String|null): void;
}
