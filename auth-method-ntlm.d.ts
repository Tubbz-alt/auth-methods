/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   auth-method-ntlm.html
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

/// <reference path="../polymer/types/polymer.d.ts" />
/// <reference path="../events-target-behavior/events-target-behavior.d.ts" />
/// <reference path="../paper-masked-input/paper-masked-input.d.ts" />
/// <reference path="../paper-icon-button/paper-icon-button.d.ts" />
/// <reference path="../paper-input/paper-input.d.ts" />
/// <reference path="../arc-icons/arc-icons.d.ts" />
/// <reference path="../iron-form/iron-form.d.ts" />
/// <reference path="auth-methods-mixin.d.ts" />
/// <reference path="auth-methods-styles.d.ts" />
/// <reference path="auth-method-step.d.ts" />

declare namespace UiElements {

  /**
   * The `<auth-method-ntlm>` element displays a form to provide the NTLM auth
   * credentials.
   *
   * It only provides data since NTLM authentication and all calculations must
   * be conducted when working on socket.
   *
   * This form requires to provide at least username and password. The domain
   * parameter is not required in NTLM so it may be empty.
   *
   * ### Example
   *
   * ```html
   * <auth-method-ntlm username="john" password="doe" domain="my-nt-domain"></auth-method-ntlm>
   * ```
   *
   * ### Styling
   *
   * `<auth-methods>` provides the following custom properties and mixins for styling:
   *
   * Custom property | Description | Default
   * ----------------|-------------|----------
   * `--auth-method-ntlm` | Mixin applied to the element. | `{}`
   * `--auth-method-panel` | Mixin applied to all auth elements. | `{}`
   *
   * This is very basic element. Style inputs using `paper-input`'s or `
   * paper-toggle`'s css variables.
   */
  class AuthMethodNtlm extends
    ArcBehaviors.EventsTargetBehavior(
    ArcBehaviors.AuthMethodsMixin(
    Object)) {

    /**
     * The domain parameter for the request.
     */
    domain: string|null|undefined;

    /**
     * The password.
     */
    password: string|null|undefined;

    /**
     * The username.
     */
    username: string|null|undefined;
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;

    /**
     * Validates the form.
     *
     * @returns `true` if valid, `false` otherwise.
     */
    validate(): Boolean|null;
    _settingsChanged(): void;

    /**
     * Creates a settings object with user provided data.
     *
     * @returns User provided data
     */
    getSettings(): object|null;

    /**
     * Restores settings from stored value.
     *
     * @param settings Object returned by `_getSettings()`
     */
    restore(settings: object|null): void;

    /**
     * Removes a value from the (paper-)input going up through path of the event.
     */
    _clearField(e: any): void;

    /**
     * Handler for the `auth-settings-changed` event (fired by all auth panels).
     * If the event was fired by other element with the same method ttype
     * then the form will be updated to incomming values.
     */
    _onAuthSettings(e: any): void;
  }
}

interface HTMLElementTagNameMap {
  "auth-method-ntlm": UiElements.AuthMethodNtlm;
}
