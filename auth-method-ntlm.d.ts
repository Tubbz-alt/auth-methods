/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   auth-method-ntlm.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {html, css} from 'lit-element';

import {AuthMethodBase} from './auth-method-base.js';

declare namespace UiElements {

  /**
   * The `<auth-method-ntlm>` element displays a form to provide the NTLM auth
   * credentials.
   *
   * It only provides data since NTLM authentication and all calculations must
   * be conducted when working on socket.
   *
   * This form requires to provide at least username and password. The domain
   * parameter is not required in NTLM so it may be empty.
   *
   * ### Example
   *
   * ```html
   * <auth-method-ntlm username="john" password="doe" domain="my-nt-domain"></auth-method-ntlm>
   * ```
   */
  class AuthMethodNtlm extends AuthMethodBase {

    /**
     * The username.
     */
    username: string|null|undefined;

    /**
     * The password.
     */
    password: string|null|undefined;

    /**
     * The domain parameter for the request.
     */
    domain: string|null|undefined;
    constructor(type: any);
    firstUpdated(): void;
    render(): any;

    /**
     * Restores settings from stored value.
     *
     * @param settings Object returned by `_getSettings()`
     */
    restore(settings: object|null): void;
    reset(): void;
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;

    /**
     * Validates the form.
     *
     * @returns `true` if valid, `false` otherwise.
     */
    validate(): Boolean|null;

    /**
     * Creates a settings object with user provided data.
     *
     * @returns User provided data
     */
    getSettings(): object|null;

    /**
     * Handler for the `auth-settings-changed` event (fired by all auth panels).
     * If the event was fired by other element with the same method ttype
     * then the form will be updated to incomming values.
     */
    _onAuthSettings(e: Event|null): void;
    _valueHandler(e: any): void;
    _valueChanged(): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "auth-method-ntlm": UiElements.AuthMethodNtlm;
  }
}
